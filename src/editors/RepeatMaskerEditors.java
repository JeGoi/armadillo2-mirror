/**
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author : Jérémy Goimard
 * @Date   : 10 115
 */

public class RepeatMaskerEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form RepeatMaskerEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected = "";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow  parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    public RepeatMaskerEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        how_jButton1 = new javax.swing.JButton();
        RepeatMaskerEditors = new javax.swing.JTabbedPane();
        general_jPanel1 = new javax.swing.JPanel();
        name_jLabel1 = new javax.swing.JLabel();
        name_jTextField1 = new javax.swing.JTextField();
        rename_jButton2 = new javax.swing.JButton();
        reset_jButton3 = new javax.swing.JButton();
        close_jButton6 = new javax.swing.JButton();
        stop_jButton4 = new javax.swing.JButton();
        run_jButton5 = new javax.swing.JButton();
        Default_Options_RButton = new javax.swing.JRadioButton();
        Advanced_Options_RButton = new javax.swing.JRadioButton();
        oo_panel = new javax.swing.JPanel();
        oo_dir_Box = new javax.swing.JCheckBox();
        oo_dir_Box_Text = new javax.swing.JTextField();
        oo_alignments_Box = new javax.swing.JCheckBox();
        oo_inv_Box = new javax.swing.JCheckBox();
        oo_lcambig_Box = new javax.swing.JCheckBox();
        oo_small_Box = new javax.swing.JCheckBox();
        oo_xsmall_Box = new javax.swing.JCheckBox();
        oo_x_Box = new javax.swing.JCheckBox();
        oo_poly_Box = new javax.swing.JCheckBox();
        oo_html_Box = new javax.swing.JCheckBox();
        oo_source_Box = new javax.swing.JCheckBox();
        oo_source_Box_Text = new javax.swing.JTextField();
        oo_ace_Box = new javax.swing.JCheckBox();
        oo_gff_Box = new javax.swing.JCheckBox();
        oo_u_Box = new javax.swing.JCheckBox();
        oo_xm_Box = new javax.swing.JCheckBox();
        oo_no_id_Box = new javax.swing.JCheckBox();
        oo_excln_Box = new javax.swing.JCheckBox();
        AO_panel = new javax.swing.JPanel();
        AO_tabpanel = new javax.swing.JTabbedPane();
        AO_Osas_panel = new javax.swing.JPanel();
        AO_Osas_engine_Box = new javax.swing.JCheckBox();
        AO_Osas_engine_Box_Text = new javax.swing.JTextField();
        AO_Osas_parallel_Box = new javax.swing.JCheckBox();
        AO_Osas_parallel_Box_Value = new javax.swing.JSpinner();
        AO_Osas_s_Box = new javax.swing.JCheckBox();
        AO_Osas_s_Box_Label = new javax.swing.JLabel();
        AO_Osas_q_Box = new javax.swing.JCheckBox();
        AO_Osas_q_Box_Label = new javax.swing.JLabel();
        AO_Osas_qq_Box = new javax.swing.JCheckBox();
        AO_Osas_qq_Box_Label = new javax.swing.JLabel();
        AO_So_panel = new javax.swing.JPanel();
        AO_So_species_Box = new javax.swing.JCheckBox();
        AO_So_species_Box_Text = new javax.swing.JTextField();
        AO_So_lib_Box = new javax.swing.JCheckBox();
        AO_So_lib_Box_Text = new javax.swing.JTextField();
        AO_Mo_panel = new javax.swing.JPanel();
        AO_Mo_cutoff_Box = new javax.swing.JCheckBox();
        AO_Mo_cutoff_Box_Value = new javax.swing.JSpinner();
        AO_Mo_nolow_Box = new javax.swing.JCheckBox();
        AO_Mo_nolow_Box_Label = new javax.swing.JLabel();
        AO_Mo_low_Box = new javax.swing.JCheckBox();
        AO_Mo_low_Box_Label = new javax.swing.JLabel();
        AO_Mo_noint_Box = new javax.swing.JCheckBox();
        AO_Mo_noint_Box_Label = new javax.swing.JLabel();
        AO_Mo_int_Box = new javax.swing.JCheckBox();
        AO_Mo_int_Box_Label = new javax.swing.JLabel();
        AO_Mo_norna_Box = new javax.swing.JCheckBox();
        AO_Mo_alu_Box = new javax.swing.JCheckBox();
        AO_Mo_div_Box = new javax.swing.JCheckBox();
        AO_Mo_div_Box_Value = new javax.swing.JSpinner();
        AO_Co_panel = new javax.swing.JPanel();
        AO_Co_is_only_Box = new javax.swing.JCheckBox();
        AO_Co_is_only_Box_Label = new javax.swing.JLabel();
        AO_Co_is_clip_Box = new javax.swing.JCheckBox();
        AO_Co_no_is_Box = new javax.swing.JCheckBox();
        AO_Ro_panel = new javax.swing.JPanel();
        AO_Ro_gc_Box = new javax.swing.JCheckBox();
        AO_Ro_gc_Box_Value = new javax.swing.JSpinner();
        AO_Ro_gccalc_Box = new javax.swing.JCheckBox();
        AO_Ro_frag_Box = new javax.swing.JCheckBox();
        AO_Ro_frag_Box_Value = new javax.swing.JSpinner();
        AO_Ro_nocut_Box = new javax.swing.JCheckBox();
        AO_Ro_noisy_Box = new javax.swing.JCheckBox();
        AO_Ro_nopost_Box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        how_jButton1.setText("?");
        how_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                how_jButton1_ActionPerformed(evt);
            }
        });

        RepeatMaskerEditors.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                RepeatMaskerEditorsComponentShown(evt);
            }
        });

        general_jPanel1.setPreferredSize(new java.awt.Dimension(459, 1060));

        name_jLabel1.setText("Name");
        name_jLabel1.setName("name_jLabel1"); // NOI18N

        name_jTextField1.setText("RepeatMasker");
        name_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_jTextField1_ActionPerformed(evt);
            }
        });

        rename_jButton2.setText("Rename");
        rename_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rename_jButton2_ActionPerformed(evt);
            }
        });

        reset_jButton3.setText("Reset default value");
        reset_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_jButton3_ActionPerformed(evt);
            }
        });

        close_jButton6.setText("Close");
        close_jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_jButton6_ActionPerformed(evt);
            }
        });

        stop_jButton4.setText("Stop");
        stop_jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_jButton4_ActionPerformed(evt);
            }
        });

        run_jButton5.setText("Run");
        run_jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                run_jButton5_ActionPerformed(evt);
            }
        });

        Default_Options_RButton.setText("Default Options");
        Default_Options_RButton.setName("Default_Options_RButton"); // NOI18N
        Default_Options_RButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Default_Options_RButton_ActionPerformed(evt);
            }
        });

        Advanced_Options_RButton.setText("Advanced Options");
        Advanced_Options_RButton.setName("Advanced_Options_RButton"); // NOI18N
        Advanced_Options_RButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Advanced_Options_RButton_ActionPerformed(evt);
            }
        });

        oo_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("oo_panel"));

        oo_dir_Box.setText("dir");
        oo_dir_Box.setName("oo_dir_Box"); // NOI18N
        oo_dir_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_dir_Box_ActionPerformed(evt);
            }
        });

        oo_dir_Box_Text.setText("[directory name]");
        oo_dir_Box_Text.setName("oo_dir_Box_Text"); // NOI18N
        oo_dir_Box_Text.setPreferredSize(new java.awt.Dimension(212, 27));
        oo_dir_Box_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_dir_Box_Text_ActionPerformed(evt);
            }
        });
        oo_dir_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                oo_dir_Box_Text_FocusLost(evt);
            }
        });

        oo_alignments_Box.setText("alignments/-a");
        oo_alignments_Box.setName("oo_alignments_Box"); // NOI18N
        oo_alignments_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_alignments_Box_ActionPerformed(evt);
            }
        });

        oo_inv_Box.setText("inv");
        oo_inv_Box.setName("oo_inv_Box"); // NOI18N
        oo_inv_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_inv_Box_ActionPerformed(evt);
            }
        });

        oo_lcambig_Box.setText("lcambig");
        oo_lcambig_Box.setName("oo_lcambig_Box"); // NOI18N
        oo_lcambig_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_lcambig_Box_ActionPerformed(evt);
            }
        });

        oo_small_Box.setText("small");
        oo_small_Box.setName("oo_small_Box"); // NOI18N
        oo_small_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_small_Box_ActionPerformed(evt);
            }
        });

        oo_xsmall_Box.setText("xsmall");
        oo_xsmall_Box.setName("oo_xsmall_Box"); // NOI18N
        oo_xsmall_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_xsmall_Box_ActionPerformed(evt);
            }
        });

        oo_x_Box.setText("x");
        oo_x_Box.setName("oo_x_Box"); // NOI18N
        oo_x_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_x_Box_ActionPerformed(evt);
            }
        });

        oo_poly_Box.setText("poly");
        oo_poly_Box.setName("oo_poly_Box"); // NOI18N
        oo_poly_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_poly_Box_ActionPerformed(evt);
            }
        });

        oo_html_Box.setText("html");
        oo_html_Box.setName("oo_html_Box"); // NOI18N
        oo_html_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_html_Box_ActionPerformed(evt);
            }
        });

        oo_source_Box.setText("source");
        oo_source_Box.setName("oo_source_Box"); // NOI18N
        oo_source_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_source_Box_ActionPerformed(evt);
            }
        });

        oo_source_Box_Text.setText("is link to html");
        oo_source_Box_Text.setName("oo_source_Box_Text"); // NOI18N
        oo_source_Box_Text.setPreferredSize(new java.awt.Dimension(212, 27));
        oo_source_Box_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_source_Box_Text_ActionPerformed(evt);
            }
        });
        oo_source_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                oo_source_Box_Text_FocusLost(evt);
            }
        });

        oo_ace_Box.setText("ace");
        oo_ace_Box.setName("oo_ace_Box"); // NOI18N
        oo_ace_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_ace_Box_ActionPerformed(evt);
            }
        });

        oo_gff_Box.setText("gff");
        oo_gff_Box.setName("oo_gff_Box"); // NOI18N
        oo_gff_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_gff_Box_ActionPerformed(evt);
            }
        });

        oo_u_Box.setText("u");
        oo_u_Box.setName("oo_u_Box"); // NOI18N
        oo_u_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_u_Box_ActionPerformed(evt);
            }
        });

        oo_xm_Box.setText("xm");
        oo_xm_Box.setName("oo_xm_Box"); // NOI18N
        oo_xm_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_xm_Box_ActionPerformed(evt);
            }
        });

        oo_no_id_Box.setText("no_id");
        oo_no_id_Box.setName("oo_no_id_Box"); // NOI18N
        oo_no_id_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_no_id_Box_ActionPerformed(evt);
            }
        });

        oo_excln_Box.setText("excln/-e");
        oo_excln_Box.setName("oo_excln_Box"); // NOI18N
        oo_excln_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oo_excln_Box_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout oo_panelLayout = new javax.swing.GroupLayout(oo_panel);
        oo_panel.setLayout(oo_panelLayout);
        oo_panelLayout.setHorizontalGroup(
            oo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oo_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(oo_panelLayout.createSequentialGroup()
                        .addComponent(oo_dir_Box)
                        .addGap(18, 18, 18)
                        .addComponent(oo_dir_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(oo_alignments_Box)
                    .addComponent(oo_inv_Box)
                    .addComponent(oo_lcambig_Box)
                    .addComponent(oo_small_Box)
                    .addComponent(oo_xsmall_Box)
                    .addComponent(oo_x_Box)
                    .addComponent(oo_poly_Box)
                    .addComponent(oo_html_Box)
                    .addGroup(oo_panelLayout.createSequentialGroup()
                        .addComponent(oo_source_Box)
                        .addGap(18, 18, 18)
                        .addComponent(oo_source_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(oo_ace_Box)
                    .addComponent(oo_gff_Box)
                    .addComponent(oo_u_Box)
                    .addComponent(oo_xm_Box)
                    .addComponent(oo_no_id_Box)
                    .addComponent(oo_excln_Box))
                .addContainerGap())
        );
        oo_panelLayout.setVerticalGroup(
            oo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oo_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(oo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oo_dir_Box)
                    .addComponent(oo_dir_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_alignments_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_inv_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_lcambig_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_small_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_xsmall_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_x_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_poly_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_html_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(oo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oo_source_Box)
                    .addComponent(oo_source_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_ace_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_gff_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_u_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_xm_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_no_id_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_excln_Box)
                .addContainerGap())
        );

        AO_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_panel"));

        AO_tabpanel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_tabpanel"));

        AO_Osas_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_Osas_panel"));

        AO_Osas_engine_Box.setText("engine/-e");
        AO_Osas_engine_Box.setName("AO_Osas_engine_Box"); // NOI18N
        AO_Osas_engine_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_engine_Box_ActionPerformed(evt);
            }
        });

        AO_Osas_engine_Box_Text.setText("[crossmatch|wublast|abblast|ncbi|hmmer|decypher]");
        AO_Osas_engine_Box_Text.setName("AO_Osas_engine_Box_Text"); // NOI18N
        AO_Osas_engine_Box_Text.setPreferredSize(new java.awt.Dimension(212, 27));
        AO_Osas_engine_Box_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_engine_Box_Text_ActionPerformed(evt);
            }
        });
        AO_Osas_engine_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AO_Osas_engine_Box_Text_FocusLost(evt);
            }
        });

        AO_Osas_parallel_Box.setText("parallel/-pa");
        AO_Osas_parallel_Box.setName("AO_Osas_parallel_Box"); // NOI18N
        AO_Osas_parallel_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_parallel_Box_ActionPerformed(evt);
            }
        });

        AO_Osas_parallel_Box_Value.setModel(new javax.swing.SpinnerNumberModel(1, 0, 2147483647, 1));
        AO_Osas_parallel_Box_Value.setName("AO_Osas_parallel_Box_Value"); // NOI18N
        AO_Osas_parallel_Box_Value.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_Osas_s_Box.setText("s");
        AO_Osas_s_Box.setName("AO_Osas_s_Box"); // NOI18N
        AO_Osas_s_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_s_Box_ActionPerformed(evt);
            }
        });

        AO_Osas_s_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Osas_s_Box_Label.setText("opposite to -q-qq");
        AO_Osas_s_Box_Label.setName("AO_Osas_s_Box_Label"); // NOI18N

        AO_Osas_q_Box.setText("q");
        AO_Osas_q_Box.setName("AO_Osas_q_Box"); // NOI18N
        AO_Osas_q_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_q_Box_ActionPerformed(evt);
            }
        });

        AO_Osas_q_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Osas_q_Box_Label.setText("opposite to -s-qq");
        AO_Osas_q_Box_Label.setName("AO_Osas_q_Box_Label"); // NOI18N

        AO_Osas_qq_Box.setText("qq");
        AO_Osas_qq_Box.setName("AO_Osas_qq_Box"); // NOI18N
        AO_Osas_qq_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Osas_qq_Box_ActionPerformed(evt);
            }
        });

        AO_Osas_qq_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Osas_qq_Box_Label.setText("opposite to -s-q");
        AO_Osas_qq_Box_Label.setName("AO_Osas_qq_Box_Label"); // NOI18N

        javax.swing.GroupLayout AO_Osas_panelLayout = new javax.swing.GroupLayout(AO_Osas_panel);
        AO_Osas_panel.setLayout(AO_Osas_panelLayout);
        AO_Osas_panelLayout.setHorizontalGroup(
            AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                        .addComponent(AO_Osas_engine_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Osas_engine_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                        .addComponent(AO_Osas_parallel_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Osas_parallel_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                        .addComponent(AO_Osas_s_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Osas_s_Box_Label))
                    .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                        .addComponent(AO_Osas_q_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Osas_q_Box_Label))
                    .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                        .addComponent(AO_Osas_qq_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Osas_qq_Box_Label)))
                .addContainerGap())
        );
        AO_Osas_panelLayout.setVerticalGroup(
            AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Osas_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Osas_engine_Box)
                    .addComponent(AO_Osas_engine_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Osas_parallel_Box)
                    .addComponent(AO_Osas_parallel_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Osas_s_Box)
                    .addComponent(AO_Osas_s_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Osas_q_Box)
                    .addComponent(AO_Osas_q_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Osas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Osas_qq_Box)
                    .addComponent(AO_Osas_qq_Box_Label))
                .addContainerGap())
        );

        AO_tabpanel.addTab("trucmachinchose", AO_Osas_panel);

        AO_So_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_So_panel"));

        AO_So_species_Box.setText("species/-spec");
        AO_So_species_Box.setName("AO_So_species_Box"); // NOI18N
        AO_So_species_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_So_species_Box_ActionPerformed(evt);
            }
        });

        AO_So_species_Box_Text.setText("[query species]");
        AO_So_species_Box_Text.setName("AO_So_species_Box_Text"); // NOI18N
        AO_So_species_Box_Text.setPreferredSize(new java.awt.Dimension(212, 27));
        AO_So_species_Box_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_So_species_Box_Text_ActionPerformed(evt);
            }
        });
        AO_So_species_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AO_So_species_Box_Text_FocusLost(evt);
            }
        });

        AO_So_lib_Box.setText("lib/-spec");
        AO_So_lib_Box.setName("AO_So_lib_Box"); // NOI18N
        AO_So_lib_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_So_lib_Box_ActionPerformed(evt);
            }
        });

        AO_So_lib_Box_Text.setText("[filename]");
        AO_So_lib_Box_Text.setName("AO_So_lib_Box_Text"); // NOI18N
        AO_So_lib_Box_Text.setPreferredSize(new java.awt.Dimension(212, 27));
        AO_So_lib_Box_Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_So_lib_Box_Text_ActionPerformed(evt);
            }
        });
        AO_So_lib_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AO_So_lib_Box_Text_FocusLost(evt);
            }
        });

        javax.swing.GroupLayout AO_So_panelLayout = new javax.swing.GroupLayout(AO_So_panel);
        AO_So_panel.setLayout(AO_So_panelLayout);
        AO_So_panelLayout.setHorizontalGroup(
            AO_So_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_So_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_So_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AO_So_panelLayout.createSequentialGroup()
                        .addComponent(AO_So_species_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_So_species_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AO_So_panelLayout.createSequentialGroup()
                        .addComponent(AO_So_lib_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_So_lib_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        AO_So_panelLayout.setVerticalGroup(
            AO_So_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_So_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_So_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_So_species_Box)
                    .addComponent(AO_So_species_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_So_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_So_lib_Box)
                    .addComponent(AO_So_lib_Box_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AO_tabpanel.addTab("tab2", AO_So_panel);

        AO_Mo_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_Mo_panel"));

        AO_Mo_cutoff_Box.setText("cutoff");
        AO_Mo_cutoff_Box.setName("AO_Mo_cutoff_Box"); // NOI18N
        AO_Mo_cutoff_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_cutoff_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_cutoff_Box_Value.setModel(new javax.swing.SpinnerNumberModel(225, 0, 2147483647, 1));
        AO_Mo_cutoff_Box_Value.setName("AO_Mo_cutoff_Box_Value"); // NOI18N
        AO_Mo_cutoff_Box_Value.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_Mo_nolow_Box.setText("nolow");
        AO_Mo_nolow_Box.setName("AO_Mo_nolow_Box"); // NOI18N
        AO_Mo_nolow_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_nolow_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_nolow_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Mo_nolow_Box_Label.setText("-low");
        AO_Mo_nolow_Box_Label.setName("AO_Mo_nolow_Box_Label"); // NOI18N

        AO_Mo_low_Box.setText("low");
        AO_Mo_low_Box.setName("AO_Mo_low_Box"); // NOI18N
        AO_Mo_low_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_low_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_low_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Mo_low_Box_Label.setText("-nolow");
        AO_Mo_low_Box_Label.setName("AO_Mo_low_Box_Label"); // NOI18N

        AO_Mo_noint_Box.setText("noint");
        AO_Mo_noint_Box.setName("AO_Mo_noint_Box"); // NOI18N
        AO_Mo_noint_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_noint_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_noint_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Mo_noint_Box_Label.setText("-in");
        AO_Mo_noint_Box_Label.setName("AO_Mo_noint_Box_Label"); // NOI18N

        AO_Mo_int_Box.setText("int");
        AO_Mo_int_Box.setName("AO_Mo_int_Box"); // NOI18N
        AO_Mo_int_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_int_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_int_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Mo_int_Box_Label.setText("-noint");
        AO_Mo_int_Box_Label.setName("AO_Mo_int_Box_Label"); // NOI18N

        AO_Mo_norna_Box.setText("norna");
        AO_Mo_norna_Box.setName("AO_Mo_norna_Box"); // NOI18N
        AO_Mo_norna_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_norna_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_alu_Box.setText("alu");
        AO_Mo_alu_Box.setName("AO_Mo_alu_Box"); // NOI18N
        AO_Mo_alu_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_alu_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_div_Box.setText("div");
        AO_Mo_div_Box.setName("AO_Mo_div_Box"); // NOI18N
        AO_Mo_div_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Mo_div_Box_ActionPerformed(evt);
            }
        });

        AO_Mo_div_Box_Value.setModel(new javax.swing.SpinnerNumberModel(10, 0, 2147483647, 1));
        AO_Mo_div_Box_Value.setName("AO_Mo_div_Box_Value"); // NOI18N
        AO_Mo_div_Box_Value.setPreferredSize(new java.awt.Dimension(115, 28));

        javax.swing.GroupLayout AO_Mo_panelLayout = new javax.swing.GroupLayout(AO_Mo_panel);
        AO_Mo_panel.setLayout(AO_Mo_panelLayout);
        AO_Mo_panelLayout.setHorizontalGroup(
            AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_cutoff_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_cutoff_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_nolow_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_nolow_Box_Label))
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_low_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_low_Box_Label))
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_noint_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_noint_Box_Label))
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_int_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_int_Box_Label))
                    .addComponent(AO_Mo_norna_Box)
                    .addComponent(AO_Mo_alu_Box)
                    .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                        .addComponent(AO_Mo_div_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Mo_div_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        AO_Mo_panelLayout.setVerticalGroup(
            AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Mo_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_cutoff_Box)
                    .addComponent(AO_Mo_cutoff_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_nolow_Box)
                    .addComponent(AO_Mo_nolow_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_low_Box)
                    .addComponent(AO_Mo_low_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_noint_Box)
                    .addComponent(AO_Mo_noint_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_int_Box)
                    .addComponent(AO_Mo_int_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Mo_norna_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Mo_alu_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Mo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Mo_div_Box)
                    .addComponent(AO_Mo_div_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AO_tabpanel.addTab("tab3", AO_Mo_panel);

        AO_Co_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_Co_panel"));

        AO_Co_is_only_Box.setText("is_only");
        AO_Co_is_only_Box.setName("AO_Co_is_only_Box"); // NOI18N
        AO_Co_is_only_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Co_is_only_Box_ActionPerformed(evt);
            }
        });

        AO_Co_is_only_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        AO_Co_is_only_Box_Label.setText("t");
        AO_Co_is_only_Box_Label.setName("AO_Co_is_only_Box_Label"); // NOI18N

        AO_Co_is_clip_Box.setText("is_clip");
        AO_Co_is_clip_Box.setName("AO_Co_is_clip_Box"); // NOI18N
        AO_Co_is_clip_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Co_is_clip_Box_ActionPerformed(evt);
            }
        });

        AO_Co_no_is_Box.setText("no_is");
        AO_Co_no_is_Box.setName("AO_Co_no_is_Box"); // NOI18N
        AO_Co_no_is_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Co_no_is_Box_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AO_Co_panelLayout = new javax.swing.GroupLayout(AO_Co_panel);
        AO_Co_panel.setLayout(AO_Co_panelLayout);
        AO_Co_panelLayout.setHorizontalGroup(
            AO_Co_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Co_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Co_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AO_Co_panelLayout.createSequentialGroup()
                        .addComponent(AO_Co_is_only_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Co_is_only_Box_Label))
                    .addComponent(AO_Co_is_clip_Box)
                    .addComponent(AO_Co_no_is_Box))
                .addContainerGap())
        );
        AO_Co_panelLayout.setVerticalGroup(
            AO_Co_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Co_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Co_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Co_is_only_Box)
                    .addComponent(AO_Co_is_only_Box_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Co_is_clip_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Co_no_is_Box)
                .addContainerGap())
        );

        AO_tabpanel.addTab("tab4", AO_Co_panel);

        AO_Ro_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("AO_Ro_panel"));

        AO_Ro_gc_Box.setText("gc");
        AO_Ro_gc_Box.setName("AO_Ro_gc_Box"); // NOI18N
        AO_Ro_gc_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_gc_Box_ActionPerformed(evt);
            }
        });

        AO_Ro_gc_Box_Value.setModel(new javax.swing.SpinnerNumberModel(10, 0, 2147483647, 1));
        AO_Ro_gc_Box_Value.setName("AO_Ro_gc_Box_Value"); // NOI18N
        AO_Ro_gc_Box_Value.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_Ro_gccalc_Box.setText("gccalc");
        AO_Ro_gccalc_Box.setName("AO_Ro_gccalc_Box"); // NOI18N
        AO_Ro_gccalc_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_gccalc_Box_ActionPerformed(evt);
            }
        });

        AO_Ro_frag_Box.setText("frag");
        AO_Ro_frag_Box.setName("AO_Ro_frag_Box"); // NOI18N
        AO_Ro_frag_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_frag_Box_ActionPerformed(evt);
            }
        });

        AO_Ro_frag_Box_Value.setModel(new javax.swing.SpinnerNumberModel(60000, 0, 2147483647, 1));
        AO_Ro_frag_Box_Value.setName("AO_Ro_frag_Box_Value"); // NOI18N
        AO_Ro_frag_Box_Value.setPreferredSize(new java.awt.Dimension(115, 28));

        AO_Ro_nocut_Box.setText("nocut");
        AO_Ro_nocut_Box.setName("AO_Ro_nocut_Box"); // NOI18N
        AO_Ro_nocut_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_nocut_Box_ActionPerformed(evt);
            }
        });

        AO_Ro_noisy_Box.setText("noisy");
        AO_Ro_noisy_Box.setName("AO_Ro_noisy_Box"); // NOI18N
        AO_Ro_noisy_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_noisy_Box_ActionPerformed(evt);
            }
        });

        AO_Ro_nopost_Box.setText("nopost");
        AO_Ro_nopost_Box.setName("AO_Ro_nopost_Box"); // NOI18N
        AO_Ro_nopost_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AO_Ro_nopost_Box_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AO_Ro_panelLayout = new javax.swing.GroupLayout(AO_Ro_panel);
        AO_Ro_panel.setLayout(AO_Ro_panelLayout);
        AO_Ro_panelLayout.setHorizontalGroup(
            AO_Ro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Ro_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Ro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AO_Ro_panelLayout.createSequentialGroup()
                        .addComponent(AO_Ro_gc_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Ro_gc_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AO_Ro_gccalc_Box)
                    .addGroup(AO_Ro_panelLayout.createSequentialGroup()
                        .addComponent(AO_Ro_frag_Box)
                        .addGap(18, 18, 18)
                        .addComponent(AO_Ro_frag_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AO_Ro_nocut_Box)
                    .addComponent(AO_Ro_noisy_Box)
                    .addComponent(AO_Ro_nopost_Box))
                .addContainerGap())
        );
        AO_Ro_panelLayout.setVerticalGroup(
            AO_Ro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_Ro_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AO_Ro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Ro_gc_Box)
                    .addComponent(AO_Ro_gc_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Ro_gccalc_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AO_Ro_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AO_Ro_frag_Box)
                    .addComponent(AO_Ro_frag_Box_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Ro_nocut_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Ro_noisy_Box)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_Ro_nopost_Box)
                .addContainerGap())
        );

        AO_tabpanel.addTab("tab5", AO_Ro_panel);

        javax.swing.GroupLayout AO_panelLayout = new javax.swing.GroupLayout(AO_panel);
        AO_panel.setLayout(AO_panelLayout);
        AO_panelLayout.setHorizontalGroup(
            AO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AO_tabpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        AO_panelLayout.setVerticalGroup(
            AO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AO_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AO_tabpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout general_jPanel1Layout = new javax.swing.GroupLayout(general_jPanel1);
        general_jPanel1.setLayout(general_jPanel1Layout);
        general_jPanel1Layout.setHorizontalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addComponent(name_jLabel1)
                .addGap(18, 18, 18)
                .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rename_jButton2))
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addComponent(Default_Options_RButton)
                .addGap(18, 18, 18)
                .addComponent(Advanced_Options_RButton))
            .addComponent(AO_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(oo_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addComponent(reset_jButton3)
                .addGap(18, 18, 18)
                .addComponent(stop_jButton4)
                .addGap(18, 18, 18)
                .addComponent(run_jButton5)
                .addGap(18, 18, 18)
                .addComponent(close_jButton6))
        );
        general_jPanel1Layout.setVerticalGroup(
            general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(general_jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_jLabel1)
                    .addComponent(name_jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rename_jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Default_Options_RButton)
                    .addComponent(Advanced_Options_RButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AO_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oo_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(general_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_jButton3)
                    .addComponent(stop_jButton4)
                    .addComponent(run_jButton5)
                    .addComponent(close_jButton6)))
        );

        RepeatMaskerEditors.addTab("RepeatMaskerEditors", general_jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(how_jButton1))
            .addComponent(RepeatMaskerEditors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(how_jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RepeatMaskerEditors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        how_jButton1.getAccessibleContext().setAccessibleDescription("- Mask repetitive DNA - SYNOPSIS: RepeatMasker [-options] &lt;seqfiles(s) in fasta format> Default settings are for masking all type of repeats in a primatesequence");
        RepeatMaskerEditors.getAccessibleContext().setAccessibleName("RepeatMaskerEditors");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RepeatMaskerEditorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_RepeatMaskerEditorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_RepeatMaskerEditorComponentShown
    
    private void how_jButton1_ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }                                             
    
    private void close_jButton6_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_jButton6_ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_close_jButton6_ActionPerformed
    
    private void run_jButton5_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton5_ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton5_ActionPerformed
    
    private void stop_jButton4_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton4_ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton4_ActionPerformed
    
    private void reset_jButton3_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton3_ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton3_ActionPerformed
    
    private void rename_jButton2_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rename_jButton2_ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField1.getText());
    }//GEN-LAST:event_rename_jButton2_ActionPerformed
    
    private void name_jTextField1_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField1_ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField1_ActionPerformed
    
    private void Default_Options_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Default_Options_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Default_Options_RButton,null);
    }//GEN-LAST:event_Default_Options_RButton_ActionPerformed

    private void Advanced_Options_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Advanced_Options_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Advanced_Options_RButton,null);
    }//GEN-LAST:event_Advanced_Options_RButton_ActionPerformed

    private void AO_Osas_engine_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Osas_engine_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,AO_Osas_engine_Box,AO_Osas_engine_Box_Text);
    }//GEN-LAST:event_AO_Osas_engine_Box_ActionPerformed

    private void AO_Osas_parallel_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Osas_parallel_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Osas_parallel_Box,AO_Osas_parallel_Box_Value);
    }//GEN-LAST:event_AO_Osas_parallel_Box_ActionPerformed

    private void AO_Osas_s_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Osas_s_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Osas_s_Box,null);
    }//GEN-LAST:event_AO_Osas_s_Box_ActionPerformed

    private void AO_Osas_q_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Osas_q_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Osas_q_Box,null);
    }//GEN-LAST:event_AO_Osas_q_Box_ActionPerformed

    private void AO_Osas_qq_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Osas_qq_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Osas_qq_Box,null);
    }//GEN-LAST:event_AO_Osas_qq_Box_ActionPerformed

    private void AO_So_species_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_So_species_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,AO_So_species_Box,AO_So_species_Box_Text);
    }//GEN-LAST:event_AO_So_species_Box_ActionPerformed

    private void AO_So_lib_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_So_lib_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,AO_So_lib_Box,AO_So_lib_Box_Text);
    }//GEN-LAST:event_AO_So_lib_Box_ActionPerformed

    private void AO_Mo_cutoff_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_cutoff_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_cutoff_Box,AO_Mo_cutoff_Box_Value);
    }//GEN-LAST:event_AO_Mo_cutoff_Box_ActionPerformed

    private void AO_Mo_nolow_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_nolow_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_nolow_Box,null);
    }//GEN-LAST:event_AO_Mo_nolow_Box_ActionPerformed

    private void AO_Mo_low_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_low_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_low_Box,null);
    }//GEN-LAST:event_AO_Mo_low_Box_ActionPerformed

    private void AO_Mo_noint_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_noint_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_noint_Box,null);
    }//GEN-LAST:event_AO_Mo_noint_Box_ActionPerformed

    private void AO_Mo_int_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_int_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_int_Box,null);
    }//GEN-LAST:event_AO_Mo_int_Box_ActionPerformed

    private void AO_Mo_norna_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_norna_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_norna_Box,null);
    }//GEN-LAST:event_AO_Mo_norna_Box_ActionPerformed

    private void AO_Mo_alu_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_alu_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_alu_Box,null);
    }//GEN-LAST:event_AO_Mo_alu_Box_ActionPerformed

    private void AO_Mo_div_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Mo_div_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Mo_div_Box,AO_Mo_div_Box_Value);
    }//GEN-LAST:event_AO_Mo_div_Box_ActionPerformed

    private void AO_Co_is_only_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Co_is_only_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Co_is_only_Box,null);
    }//GEN-LAST:event_AO_Co_is_only_Box_ActionPerformed

    private void AO_Co_is_clip_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Co_is_clip_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Co_is_clip_Box,null);
    }//GEN-LAST:event_AO_Co_is_clip_Box_ActionPerformed

    private void AO_Co_no_is_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Co_no_is_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Co_no_is_Box,null);
    }//GEN-LAST:event_AO_Co_no_is_Box_ActionPerformed

    private void AO_Ro_gc_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_gc_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_gc_Box,AO_Ro_gc_Box_Value);
    }//GEN-LAST:event_AO_Ro_gc_Box_ActionPerformed

    private void AO_Ro_gccalc_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_gccalc_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_gccalc_Box,null);
    }//GEN-LAST:event_AO_Ro_gccalc_Box_ActionPerformed

    private void AO_Ro_frag_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_frag_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_frag_Box,AO_Ro_frag_Box_Value);
    }//GEN-LAST:event_AO_Ro_frag_Box_ActionPerformed

    private void AO_Ro_nocut_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_nocut_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_nocut_Box,null);
    }//GEN-LAST:event_AO_Ro_nocut_Box_ActionPerformed

    private void AO_Ro_noisy_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_noisy_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_noisy_Box,null);
    }//GEN-LAST:event_AO_Ro_noisy_Box_ActionPerformed

    private void AO_Ro_nopost_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AO_Ro_nopost_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,AO_Ro_nopost_Box,null);
    }//GEN-LAST:event_AO_Ro_nopost_Box_ActionPerformed

    private void oo_dir_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_dir_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,oo_dir_Box,oo_dir_Box_Text);
    }//GEN-LAST:event_oo_dir_Box_ActionPerformed

    private void oo_alignments_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_alignments_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_alignments_Box,null);
    }//GEN-LAST:event_oo_alignments_Box_ActionPerformed

    private void oo_inv_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_inv_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_inv_Box,null);
    }//GEN-LAST:event_oo_inv_Box_ActionPerformed

    private void oo_lcambig_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_lcambig_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_lcambig_Box,null);
    }//GEN-LAST:event_oo_lcambig_Box_ActionPerformed

    private void oo_small_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_small_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_small_Box,null);
    }//GEN-LAST:event_oo_small_Box_ActionPerformed

    private void oo_xsmall_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_xsmall_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_xsmall_Box,null);
    }//GEN-LAST:event_oo_xsmall_Box_ActionPerformed

    private void oo_x_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_x_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_x_Box,null);
    }//GEN-LAST:event_oo_x_Box_ActionPerformed

    private void oo_poly_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_poly_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_poly_Box,null);
    }//GEN-LAST:event_oo_poly_Box_ActionPerformed

    private void oo_html_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_html_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_html_Box,null);
    }//GEN-LAST:event_oo_html_Box_ActionPerformed

    private void oo_source_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_source_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,oo_source_Box,oo_source_Box_Text);
    }//GEN-LAST:event_oo_source_Box_ActionPerformed

    private void oo_ace_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_ace_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_ace_Box,null);
    }//GEN-LAST:event_oo_ace_Box_ActionPerformed

    private void oo_gff_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_gff_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_gff_Box,null);
    }//GEN-LAST:event_oo_gff_Box_ActionPerformed

    private void oo_u_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_u_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_u_Box,null);
    }//GEN-LAST:event_oo_u_Box_ActionPerformed

    private void oo_xm_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_xm_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_xm_Box,null);
    }//GEN-LAST:event_oo_xm_Box_ActionPerformed

    private void oo_no_id_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_no_id_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_no_id_Box,null);
    }//GEN-LAST:event_oo_no_id_Box_ActionPerformed

    private void oo_excln_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oo_excln_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventSpinner(properties,oo_excln_Box,null);
    }//GEN-LAST:event_oo_excln_Box_ActionPerformed
        
    /*******************************************************************
    * Enabled Function
    *******************************************************************/
    
    private void enabledFunction (boolean e) {
        this.AO_Osas_engine_Box.setEnabled(e);
        if (properties.isSet(AO_Osas_engine_Box.getName()) && e==true) {
            this.AO_Osas_engine_Box_Text.setEnabled(true);
        } else {
            this.AO_Osas_engine_Box_Text.setEnabled(false);
        }
        this.AO_Osas_parallel_Box.setEnabled(e);
        if (properties.isSet(AO_Osas_parallel_Box.getName()) && e==true) {
            this.AO_Osas_parallel_Box_Value.setEnabled(true);
        } else {
            this.AO_Osas_parallel_Box_Value.setEnabled(false);
        }
        this.AO_Osas_s_Box.setEnabled(e);
        this.AO_Osas_q_Box.setEnabled(e);
        this.AO_Osas_qq_Box.setEnabled(e);
        this.AO_So_species_Box.setEnabled(e);
        if (properties.isSet(AO_So_species_Box.getName()) && e==true) {
            this.AO_So_species_Box_Text.setEnabled(true);
        } else {
            this.AO_So_species_Box_Text.setEnabled(false);
        }
        this.AO_So_lib_Box.setEnabled(e);
        if (properties.isSet(AO_So_lib_Box.getName()) && e==true) {
            this.AO_So_lib_Box_Text.setEnabled(true);
        } else {
            this.AO_So_lib_Box_Text.setEnabled(false);
        }
        this.AO_Mo_cutoff_Box.setEnabled(e);
        if (properties.isSet(AO_Mo_cutoff_Box.getName()) && e==true) {
            this.AO_Mo_cutoff_Box_Value.setEnabled(true);
        } else {
            this.AO_Mo_cutoff_Box_Value.setEnabled(false);
        }
        this.AO_Mo_nolow_Box.setEnabled(e);
        this.AO_Mo_low_Box.setEnabled(e);
        this.AO_Mo_noint_Box.setEnabled(e);
        this.AO_Mo_int_Box.setEnabled(e);
        this.AO_Mo_norna_Box.setEnabled(e);
        this.AO_Mo_alu_Box.setEnabled(e);
        this.AO_Mo_div_Box.setEnabled(e);
        if (properties.isSet(AO_Mo_div_Box.getName()) && e==true) {
            this.AO_Mo_div_Box_Value.setEnabled(true);
        } else {
            this.AO_Mo_div_Box_Value.setEnabled(false);
        }
        this.AO_Co_is_only_Box.setEnabled(e);
        this.AO_Co_is_clip_Box.setEnabled(e);
        this.AO_Co_no_is_Box.setEnabled(e);
        this.AO_Ro_gc_Box.setEnabled(e);
        if (properties.isSet(AO_Ro_gc_Box.getName()) && e==true) {
            this.AO_Ro_gc_Box_Value.setEnabled(true);
        } else {
            this.AO_Ro_gc_Box_Value.setEnabled(false);
        }
        this.AO_Ro_gccalc_Box.setEnabled(e);
        this.AO_Ro_frag_Box.setEnabled(e);
        if (properties.isSet(AO_Ro_frag_Box.getName()) && e==true) {
            this.AO_Ro_frag_Box_Value.setEnabled(true);
        } else {
            this.AO_Ro_frag_Box_Value.setEnabled(false);
        }
        this.AO_Ro_nocut_Box.setEnabled(e);
        this.AO_Ro_noisy_Box.setEnabled(e);
        this.AO_Ro_nopost_Box.setEnabled(e);
        this.oo_dir_Box.setEnabled(e);
        if (properties.isSet(oo_dir_Box.getName()) && e==true) {
            this.oo_dir_Box_Text.setEnabled(true);
        } else {
            this.oo_dir_Box_Text.setEnabled(false);
        }
        this.oo_alignments_Box.setEnabled(e);
        this.oo_inv_Box.setEnabled(e);
        this.oo_lcambig_Box.setEnabled(e);
        this.oo_small_Box.setEnabled(e);
        this.oo_xsmall_Box.setEnabled(e);
        this.oo_x_Box.setEnabled(e);
        this.oo_poly_Box.setEnabled(e);
        this.oo_html_Box.setEnabled(e);
        this.oo_source_Box.setEnabled(e);
        if (properties.isSet(oo_source_Box.getName()) && e==true) {
            this.oo_source_Box_Text.setEnabled(true);
        } else {
            this.oo_source_Box_Text.setEnabled(false);
        }
        this.oo_ace_Box.setEnabled(e);
        this.oo_gff_Box.setEnabled(e);
        this.oo_u_Box.setEnabled(e);
        this.oo_xm_Box.setEnabled(e);
        this.oo_no_id_Box.setEnabled(e);
        this.oo_excln_Box.setEnabled(e);
    }
    
    
    /*******************************************************************
    * Update Saved Properties => usp_functions
    *******************************************************************/
    
    private void updateSavedProperties(workflow_properties properties) {
        usp_valueANDtext (properties);
        usp_boxANDbutton (properties);
    }
    
    private void usp_valueANDtext (workflow_properties properties) {
        if (this.properties.isSet(AO_Osas_parallel_Box_Value.getName())){
            this.AO_Osas_parallel_Box_Value.setValue(Integer.parseInt(this.properties.get(AO_Osas_parallel_Box_Value.getName())));
            this.AO_Osas_parallel_Box_Value.setEnabled(false);
        }
        if (this.properties.isSet(AO_Mo_cutoff_Box_Value.getName())){
            this.AO_Mo_cutoff_Box_Value.setValue(Integer.parseInt(this.properties.get(AO_Mo_cutoff_Box_Value.getName())));
            this.AO_Mo_cutoff_Box_Value.setEnabled(false);
        }
        if (this.properties.isSet(AO_Mo_div_Box_Value.getName())){
            this.AO_Mo_div_Box_Value.setValue(Integer.parseInt(this.properties.get(AO_Mo_div_Box_Value.getName())));
            this.AO_Mo_div_Box_Value.setEnabled(false);
        }
        if (this.properties.isSet(AO_Ro_gc_Box_Value.getName())){
            this.AO_Ro_gc_Box_Value.setValue(Integer.parseInt(this.properties.get(AO_Ro_gc_Box_Value.getName())));
            this.AO_Ro_gc_Box_Value.setEnabled(false);
        }
        if (this.properties.isSet(AO_Ro_frag_Box_Value.getName())){
            this.AO_Ro_frag_Box_Value.setValue(Integer.parseInt(this.properties.get(AO_Ro_frag_Box_Value.getName())));
            this.AO_Ro_frag_Box_Value.setEnabled(false);
        }
        if (this.properties.isSet(AO_Osas_engine_Box_Text.getName())){
            this.AO_Osas_engine_Box_Text.setText(this.properties.get(AO_Osas_engine_Box_Text.getName()));
            this.AO_Osas_engine_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(AO_So_species_Box_Text.getName())){
            this.AO_So_species_Box_Text.setText(this.properties.get(AO_So_species_Box_Text.getName()));
            this.AO_So_species_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(AO_So_lib_Box_Text.getName())){
            this.AO_So_lib_Box_Text.setText(this.properties.get(AO_So_lib_Box_Text.getName()));
            this.AO_So_lib_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(oo_dir_Box_Text.getName())){
            this.oo_dir_Box_Text.setText(this.properties.get(oo_dir_Box_Text.getName()));
            this.oo_dir_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(oo_source_Box_Text.getName())){
            this.oo_source_Box_Text.setText(this.properties.get(oo_source_Box_Text.getName()));
            this.oo_source_Box_Text.setEnabled(false);
        }
    }
    
    private void usp_boxANDbutton (workflow_properties properties) {
        if (this.properties.isSet(AO_Osas_engine_Box.getName())){
            this.AO_Osas_engine_Box.setSelected(true);
            this.AO_Osas_engine_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(AO_Osas_parallel_Box.getName())){
            this.AO_Osas_parallel_Box.setSelected(true);
            this.AO_Osas_parallel_Box_Value.setEnabled(true);
        }
        if (this.properties.isSet(AO_Osas_s_Box.getName())){
            this.AO_Osas_s_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Osas_q_Box.getName())){
            this.AO_Osas_q_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Osas_qq_Box.getName())){
            this.AO_Osas_qq_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_So_species_Box.getName())){
            this.AO_So_species_Box.setSelected(true);
            this.AO_So_species_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(AO_So_lib_Box.getName())){
            this.AO_So_lib_Box.setSelected(true);
            this.AO_So_lib_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(AO_Mo_cutoff_Box.getName())){
            this.AO_Mo_cutoff_Box.setSelected(true);
            this.AO_Mo_cutoff_Box_Value.setEnabled(true);
        }
        if (this.properties.isSet(AO_Mo_nolow_Box.getName())){
            this.AO_Mo_nolow_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_low_Box.getName())){
            this.AO_Mo_low_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_noint_Box.getName())){
            this.AO_Mo_noint_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_int_Box.getName())){
            this.AO_Mo_int_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_norna_Box.getName())){
            this.AO_Mo_norna_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_alu_Box.getName())){
            this.AO_Mo_alu_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Mo_div_Box.getName())){
            this.AO_Mo_div_Box.setSelected(true);
            this.AO_Mo_div_Box_Value.setEnabled(true);
        }
        if (this.properties.isSet(AO_Co_is_only_Box.getName())){
            this.AO_Co_is_only_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Co_is_clip_Box.getName())){
            this.AO_Co_is_clip_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Co_no_is_Box.getName())){
            this.AO_Co_no_is_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Ro_gc_Box.getName())){
            this.AO_Ro_gc_Box.setSelected(true);
            this.AO_Ro_gc_Box_Value.setEnabled(true);
        }
        if (this.properties.isSet(AO_Ro_gccalc_Box.getName())){
            this.AO_Ro_gccalc_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Ro_frag_Box.getName())){
            this.AO_Ro_frag_Box.setSelected(true);
            this.AO_Ro_frag_Box_Value.setEnabled(true);
        }
        if (this.properties.isSet(AO_Ro_nocut_Box.getName())){
            this.AO_Ro_nocut_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Ro_noisy_Box.getName())){
            this.AO_Ro_noisy_Box.setSelected(true);
        }
        if (this.properties.isSet(AO_Ro_nopost_Box.getName())){
            this.AO_Ro_nopost_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_dir_Box.getName())){
            this.oo_dir_Box.setSelected(true);
            this.oo_dir_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(oo_alignments_Box.getName())){
            this.oo_alignments_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_inv_Box.getName())){
            this.oo_inv_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_lcambig_Box.getName())){
            this.oo_lcambig_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_small_Box.getName())){
            this.oo_small_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_xsmall_Box.getName())){
            this.oo_xsmall_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_x_Box.getName())){
            this.oo_x_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_poly_Box.getName())){
            this.oo_poly_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_html_Box.getName())){
            this.oo_html_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_source_Box.getName())){
            this.oo_source_Box.setSelected(true);
            this.oo_source_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(oo_ace_Box.getName())){
            this.oo_ace_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_gff_Box.getName())){
            this.oo_gff_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_u_Box.getName())){
            this.oo_u_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_xm_Box.getName())){
            this.oo_xm_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_no_id_Box.getName())){
            this.oo_no_id_Box.setSelected(true);
        }
        if (this.properties.isSet(oo_excln_Box.getName())){
            this.oo_excln_Box.setSelected(true);
        }
    }
    

    /*******************************************************************
     * Set the configuration properties for this object
     ******************************************************************/
    
    @Override
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        // Update Saved Properties => usp
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    /*******************************************************************
     * Sets for Properties
     ******************************************************************/
    
    /**
     * Set Properties
     * @param properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
        // Set the menu
        this.menuFields(properties);
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    /*******************************************************************
     * Set With default program values present in properties file
     ******************************************************************/
    
    private void defaultPgrmValues(workflow_properties properties) {
        Util.getDefaultPgrmValues(properties,properties.isSet(Default_Options_RButton.getName()));
    }
        /*******************************************************************
     * Set Menu fields
     ******************************************************************/
    
    private void menuFields(workflow_properties properties) {
        if (properties.isSet(Default_Options_RButton.getName())) {
            Default_Options_RButton.setEnabled(true);
        }
        else if (properties.isSet(Advanced_Options_RButton.getName())) {
            Advanced_Options_RButton.setEnabled(true);
        }
    }
    
    /*******************************************************************
     * Save Image
     ******************************************************************/
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AO_Co_is_clip_Box;
    private javax.swing.JCheckBox AO_Co_is_only_Box;
    private javax.swing.JLabel AO_Co_is_only_Box_Label;
    private javax.swing.JCheckBox AO_Co_no_is_Box;
    private javax.swing.JPanel AO_Co_panel;
    private javax.swing.JCheckBox AO_Mo_alu_Box;
    private javax.swing.JCheckBox AO_Mo_cutoff_Box;
    private javax.swing.JSpinner AO_Mo_cutoff_Box_Value;
    private javax.swing.JCheckBox AO_Mo_div_Box;
    private javax.swing.JSpinner AO_Mo_div_Box_Value;
    private javax.swing.JCheckBox AO_Mo_int_Box;
    private javax.swing.JLabel AO_Mo_int_Box_Label;
    private javax.swing.JCheckBox AO_Mo_low_Box;
    private javax.swing.JLabel AO_Mo_low_Box_Label;
    private javax.swing.JCheckBox AO_Mo_noint_Box;
    private javax.swing.JLabel AO_Mo_noint_Box_Label;
    private javax.swing.JCheckBox AO_Mo_nolow_Box;
    private javax.swing.JLabel AO_Mo_nolow_Box_Label;
    private javax.swing.JCheckBox AO_Mo_norna_Box;
    private javax.swing.JPanel AO_Mo_panel;
    private javax.swing.JCheckBox AO_Osas_engine_Box;
    private javax.swing.JTextField AO_Osas_engine_Box_Text;
    private javax.swing.JPanel AO_Osas_panel;
    private javax.swing.JCheckBox AO_Osas_parallel_Box;
    private javax.swing.JSpinner AO_Osas_parallel_Box_Value;
    private javax.swing.JCheckBox AO_Osas_q_Box;
    private javax.swing.JLabel AO_Osas_q_Box_Label;
    private javax.swing.JCheckBox AO_Osas_qq_Box;
    private javax.swing.JLabel AO_Osas_qq_Box_Label;
    private javax.swing.JCheckBox AO_Osas_s_Box;
    private javax.swing.JLabel AO_Osas_s_Box_Label;
    private javax.swing.JCheckBox AO_Ro_frag_Box;
    private javax.swing.JSpinner AO_Ro_frag_Box_Value;
    private javax.swing.JCheckBox AO_Ro_gc_Box;
    private javax.swing.JSpinner AO_Ro_gc_Box_Value;
    private javax.swing.JCheckBox AO_Ro_gccalc_Box;
    private javax.swing.JCheckBox AO_Ro_nocut_Box;
    private javax.swing.JCheckBox AO_Ro_noisy_Box;
    private javax.swing.JCheckBox AO_Ro_nopost_Box;
    private javax.swing.JPanel AO_Ro_panel;
    private javax.swing.JCheckBox AO_So_lib_Box;
    private javax.swing.JTextField AO_So_lib_Box_Text;
    private javax.swing.JPanel AO_So_panel;
    private javax.swing.JCheckBox AO_So_species_Box;
    private javax.swing.JTextField AO_So_species_Box_Text;
    private javax.swing.JPanel AO_panel;
    private javax.swing.JTabbedPane AO_tabpanel;
    private javax.swing.JRadioButton Advanced_Options_RButton;
    private javax.swing.JRadioButton Default_Options_RButton;
    private javax.swing.JTabbedPane RepeatMaskerEditors;
    private javax.swing.JButton close_jButton6;
    private javax.swing.JPanel general_jPanel1;
    private javax.swing.JButton how_jButton1;
    private javax.swing.JLabel name_jLabel1;
    private javax.swing.JTextField name_jTextField1;
    private javax.swing.JCheckBox oo_ace_Box;
    private javax.swing.JCheckBox oo_alignments_Box;
    private javax.swing.JCheckBox oo_dir_Box;
    private javax.swing.JTextField oo_dir_Box_Text;
    private javax.swing.JCheckBox oo_excln_Box;
    private javax.swing.JCheckBox oo_gff_Box;
    private javax.swing.JCheckBox oo_html_Box;
    private javax.swing.JCheckBox oo_inv_Box;
    private javax.swing.JCheckBox oo_lcambig_Box;
    private javax.swing.JCheckBox oo_no_id_Box;
    private javax.swing.JPanel oo_panel;
    private javax.swing.JCheckBox oo_poly_Box;
    private javax.swing.JCheckBox oo_small_Box;
    private javax.swing.JCheckBox oo_source_Box;
    private javax.swing.JTextField oo_source_Box_Text;
    private javax.swing.JCheckBox oo_u_Box;
    private javax.swing.JCheckBox oo_x_Box;
    private javax.swing.JCheckBox oo_xm_Box;
    private javax.swing.JCheckBox oo_xsmall_Box;
    private javax.swing.JButton rename_jButton2;
    private javax.swing.JButton reset_jButton3;
    private javax.swing.JButton run_jButton5;
    private javax.swing.JButton stop_jButton4;
    // End of variables declaration//GEN-END:variables
}
