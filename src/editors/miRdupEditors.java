/**
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package editors;

import configuration.Config;
import configuration.Util;
import editor.EditorInterface;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import program.*;
import workflows.armadillo_workflow;
import workflows.workflow_properties;
import workflows.workflow_properties_dictionnary;

/**
 *
 * @author : Jérémy Goimard
 * @Date   : 0 116
 */

public class miRdupEditors extends javax.swing.JDialog implements EditorInterface  {
    
    /**
     * Creates new form miRdupEditors
     */
    Config config=new Config();
    //ConnectorInfoBox connectorinfobox;
    workflow_properties_dictionnary dict=new workflow_properties_dictionnary();
    String selected = "";             // Selected properties
    Frame frame;
    workflow_properties properties;
    armadillo_workflow  parent_workflow;
    
    public final String defaultNameString=" Name";
    static final boolean default_map=true;
    
    public miRdupEditors(java.awt.Frame parent, armadillo_workflow parent_workflow) {
        super(parent, false);
        this.parent_workflow=parent_workflow;
        //--Set variables and init
        frame=parent;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    
        how_jButton = new javax.swing.JButton();            //Basic Panel
        miRdupEditors = new javax.swing.JTabbedPane(); //Basic Panel
        general_jPanel1 = new javax.swing.JPanel();          //Basic Panel
        rename_jButton = new javax.swing.JButton();         //Basic Panel
        name_jTextField = new javax.swing.JTextField();     //Basic Panel
        name_jLabel = new javax.swing.JLabel();             //Basic Panel
        reset_jButton = new javax.swing.JButton();          //Basic Panel
        stop_jButton = new javax.swing.JButton();           //Basic Panel
        run_jButton = new javax.swing.JButton();            //Basic Panel
        close_jButton = new javax.swing.JButton();          //Basic Panel
        Default_Options_RButton = new javax.swing.JRadioButton();
        Train_Valid_and_Pred_RButton = new javax.swing.JRadioButton();
        Training_Section_RButton = new javax.swing.JRadioButton();
        Validation_Section_RButton = new javax.swing.JRadioButton();
        Prediction_Section_RButton = new javax.swing.JRadioButton();
        O_TO_k_Box = new javax.swing.JCheckBox();
        O_TO_k_Box_Dir = new javax.swing.JButton();
        O_TO_k_Box_DirFiles = new javax.swing.JTextField();
        O_TO_k_Box_Label = new javax.swing.JLabel();
        O_TO_m_Box = new javax.swing.JCheckBox();
        O_TO_m_Box_DirRep = new javax.swing.JTextField();
        O_TO_m_Box_Dir = new javax.swing.JButton();
        O_TO_h_Box = new javax.swing.JCheckBox();
        O_TO_h_Box_Text = new javax.swing.JTextField();
        O_TO_o_Box = new javax.swing.JCheckBox();
        O_TO_o_Box_Text = new javax.swing.JTextField();
        O_TO_s_Box = new javax.swing.JCheckBox();
        O_TO_s_Box_Text = new javax.swing.JTextField();
        O_TO_v_Box = new javax.swing.JCheckBox();
        O_TO_v_Box_Text = new javax.swing.JTextField();
        O_VO_c_Box = new javax.swing.JCheckBox();
        O_VO_c_Box_Text = new javax.swing.JTextField();
        O_VO_p_Box = new javax.swing.JCheckBox();
        O_VO_p_Box_Text = new javax.swing.JTextField();
        O_PO_predict_Box = new javax.swing.JCheckBox();
        O_PO_predict_Box_Text = new javax.swing.JTextField();
        O_PO_u_Box = new javax.swing.JCheckBox();
        O_PO_u_Box_Text = new javax.swing.JTextField();
        O_PO_d_Box = new javax.swing.JCheckBox();
        O_PO_d_Box_Text = new javax.swing.JTextField();
        O_PO_f_Box = new javax.swing.JCheckBox();
        O_PO_f_Box_Text = new javax.swing.JTextField();
        O_PO_i_Box = new javax.swing.JCheckBox();
        O_PO_i_Box_Text = new javax.swing.JTextField();
        O_C_r_Box = new javax.swing.JCheckBox();
        O_C_r_Box_DirFile = new javax.swing.JTextField();
        O_C_r_Box_Dir = new javax.swing.JButton();
        O_C_r_Box_Label = new javax.swing.JLabel();
        O_tabpanel = new javax.swing.JTabbedPane();
        O_C_panel = new javax.swing.JPanel();
        O_panel = new javax.swing.JPanel();
        O_PO_panel = new javax.swing.JPanel();
        O_TO_panel = new javax.swing.JPanel();
        O_VO_panel = new javax.swing.JPanel();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);


            how_jButton.setText("?");
            how_jButton.setName("how_jButton"); // NOI18N
            how_jButton.getAccessibleContext().setAccessibleDescription("Computational prediction of the localization of microRNAs within their pre-miRNA");
            how_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    how_jButton_ActionPerformed(evt);
                }
            });


            name_jTextField.setText("miRdupEditors");
            name_jTextField.setName("name_jTextField"); // NOI18N
            name_jTextField.getAccessibleContext().setAccessibleDescription("");
            name_jTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    name_jTextField_ActionPerformed(evt);
                }
            });


            rename_jButton.setText("Rename");
            rename_jButton.setName("rename_jButton"); // NOI18N
            rename_jButton.getAccessibleContext().setAccessibleDescription("Rename the box");
            rename_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rename_jButton_ActionPerformed(evt);
                }
            });


            reset_jButton.setText("Reset");
            reset_jButton.setName("reset_jButton"); // NOI18N
            reset_jButton.getAccessibleContext().setAccessibleDescription("Reset default value");
            reset_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    reset_jButton_ActionPerformed(evt);
                }
            });


            stop_jButton.setText("Stop");
            stop_jButton.setName("stop_jButton"); // NOI18N
            stop_jButton.getAccessibleContext().setAccessibleDescription("Stop the program");
            stop_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    stop_jButton_ActionPerformed(evt);
                }
            });


            run_jButton.setText("Run");
            run_jButton.setName("run_jButton"); // NOI18N
            run_jButton.getAccessibleContext().setAccessibleDescription("Run the program");
            run_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    run_jButton_ActionPerformed(evt);
                }
            });


            close_jButton.setText("Close");
            close_jButton.setName("close_jButton"); // NOI18N
            close_jButton.getAccessibleContext().setAccessibleDescription("Close this window");
            close_jButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    close_jButton_ActionPerformed(evt);
                }
            });


            Default_Options_RButton.setText("Default Options");
            Default_Options_RButton.setName("Default_Options_RButton"); // NOI18N
            Default_Options_RButton.getAccessibleContext().setAccessibleDescription("Default_Options_RButton");
            Default_Options_RButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Default_Options_RButton_ActionPerformed(evt);
                }
            });


            Train_Valid_and_Pred_RButton.setText("Train Valid and Pred");
            Train_Valid_and_Pred_RButton.setName("Train_Valid_and_Pred_RButton"); // NOI18N
            Train_Valid_and_Pred_RButton.getAccessibleContext().setAccessibleDescription("Train_Valid_and_Pred_RButton");
            Train_Valid_and_Pred_RButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Train_Valid_and_Pred_RButton_ActionPerformed(evt);
                }
            });


            Training_Section_RButton.setText("Training Section");
            Training_Section_RButton.setName("Training_Section_RButton"); // NOI18N
            Training_Section_RButton.getAccessibleContext().setAccessibleDescription("Training_Section_RButton");
            Training_Section_RButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Training_Section_RButton_ActionPerformed(evt);
                }
            });


            Validation_Section_RButton.setText("Validation Section");
            Validation_Section_RButton.setName("Validation_Section_RButton"); // NOI18N
            Validation_Section_RButton.getAccessibleContext().setAccessibleDescription("Validation_Section_RButton");
            Validation_Section_RButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Validation_Section_RButton_ActionPerformed(evt);
                }
            });


            Prediction_Section_RButton.setText("Prediction Section");
            Prediction_Section_RButton.setName("Prediction_Section_RButton"); // NOI18N
            Prediction_Section_RButton.getAccessibleContext().setAccessibleDescription("Prediction_Section_RButton");
            Prediction_Section_RButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Prediction_Section_RButton_ActionPerformed(evt);
                }
            });


        O_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N        O_panel.setName("O_panel"); // NOI18N

        O_tabpanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "O_tabpanel"));

        O_TO_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Training_Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        O_TO_panel.setName("O_TO_panel"); // NOI18N
        

            O_TO_k_Box.setText("k");
            O_TO_k_Box.setName("O_TO_k_Box"); // NOI18N
            O_TO_k_Box.getAccessibleContext().setAccessibleDescription("Species keyword. Used to train on a portion of miRbase instead on all miRbase ex: Metazoa, Primates, Nematoda, Viridiplantae, monocotyledons");
            O_TO_k_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_k_Box_ActionPerformed(evt);
                }
            });

            O_TO_k_Box_DirFiles.setName("O_TO_k_Box_DirFiles"); // NOI18N
            O_TO_k_Box_DirFiles.getAccessibleContext().setAccessibleDescription("Species keyword. Used to train on a portion of miRbase instead on all miRbase ex: Metazoa, Primates, Nematoda, Viridiplantae, monocotyledons");
            O_TO_k_Box_DirFiles.setText("Metazoa, Primates, Nematoda, Viridiplantae, monocotyledons");
            O_TO_k_Box_DirFiles.setPreferredSize(new java.awt.Dimension(220, 27));
            

            O_TO_k_Box_Dir.setText("O_TO_k_Box");
            O_TO_k_Box_Dir.setName("O_TO_k_Box_Dir"); // NOI18N
            O_TO_k_Box_Dir.getAccessibleContext().setAccessibleDescription("Species keyword. Used to train on a portion of miRbase instead on all miRbase ex: Metazoa, Primates, Nematoda, Viridiplantae, monocotyledons");
            O_TO_k_Box_Dir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_k_Box_Dir_ActionPerformed(evt);
                }
            });


            O_TO_k_Box_Label.setText("Default: all miRbase (option -k all, already set)");
            O_TO_k_Box_Label.setName("O_TO_k_Box_Label"); // NOI18N
            O_TO_k_Box_Label.getAccessibleContext().setAccessibleDescription("Default: all miRbase (option -k all, already set)");
            O_TO_k_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N

            O_TO_m_Box.setText("m");
            O_TO_m_Box.setName("O_TO_m_Box"); // NOI18N
            O_TO_m_Box.getAccessibleContext().setAccessibleDescription("Matures miRNAs file, in FASTA format. Submit it if you are offline (no internet connexion) or if you want to train on your own sequences. Be careful to have the same sequences names than the hairpin precursors file.");
            O_TO_m_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_m_Box_ActionPerformed(evt);
                }
            });


            O_TO_m_Box_Dir.setText("O_TO_m_Box");
            O_TO_m_Box_Dir.setName("O_TO_m_Box_Dir"); // NOI18N
            O_TO_m_Box_Dir.getAccessibleContext().setAccessibleDescription("Matures miRNAs file, in FASTA format. Submit it if you are offline (no internet connexion) or if you want to train on your own sequences. Be careful to have the same sequences names than the hairpin precursors file.");
            O_TO_m_Box_Dir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_m_Box_Dir_ActionPerformed(evt);
                }
            });

            O_TO_m_Box_DirRep.setName("O_TO_m_Box_DirRep"); // NOI18N
            O_TO_m_Box_DirRep.getAccessibleContext().setAccessibleDescription("Matures miRNAs file, in FASTA format. Submit it if you are offline (no internet connexion) or if you want to train on your own sequences. Be careful to have the same sequences names than the hairpin precursors file.");
            O_TO_m_Box_DirRep.setText("Matures miRNAs file, in FASTA format");
            O_TO_m_Box_DirRep.setPreferredSize(new java.awt.Dimension(220, 27));
            

            O_TO_h_Box.setText("h");
            O_TO_h_Box.setName("O_TO_h_Box"); // NOI18N
            O_TO_h_Box.getAccessibleContext().setAccessibleDescription("Hairpins precursors file, in FASTA format. Submit it if you are offline or if you want to train on your own sequences. Be careful to have the same sequences names than the mature miRNAs file.");
            O_TO_h_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_h_Box_ActionPerformed(evt);
                }
            });

            O_TO_h_Box_Text.setName("O_TO_h_Box_Text"); // NOI18N
            O_TO_h_Box_Text.getAccessibleContext().setAccessibleDescription("Hairpins precursors file, in FASTA format. Submit it if you are offline or if you want to train on your own sequences. Be careful to have the same sequences names than the mature miRNAs file.");
            O_TO_h_Box_Text.setText("Hairpins precursors file, in FASTA format");
            O_TO_h_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_TO_h_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_TO_h_Box_Text_FocusLost(evt);
                }
            });
            

            O_TO_o_Box.setText("o");
            O_TO_o_Box.setName("O_TO_o_Box"); // NOI18N
            O_TO_o_Box.getAccessibleContext().setAccessibleDescription("Organism list file from miRbase. Submit it if you are offline or if you submit a keyword and train the model with local datasets.");
            O_TO_o_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_o_Box_ActionPerformed(evt);
                }
            });

            O_TO_o_Box_Text.setName("O_TO_o_Box_Text"); // NOI18N
            O_TO_o_Box_Text.getAccessibleContext().setAccessibleDescription("Organism list file from miRbase. Submit it if you are offline or if you submit a keyword and train the model with local datasets.");
            O_TO_o_Box_Text.setText("Organism list file from miRbase");
            O_TO_o_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_TO_o_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_TO_o_Box_Text_FocusLost(evt);
                }
            });
            

            O_TO_s_Box.setText("s");
            O_TO_s_Box.setName("O_TO_s_Box"); // NOI18N
            O_TO_s_Box.getAccessibleContext().setAccessibleDescription("Secondary structure of precursors pre-calculated, if it's already done. Must be in RNAFold output format.");
            O_TO_s_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_s_Box_ActionPerformed(evt);
                }
            });

            O_TO_s_Box_Text.setName("O_TO_s_Box_Text"); // NOI18N
            O_TO_s_Box_Text.getAccessibleContext().setAccessibleDescription("Secondary structure of precursors pre-calculated, if it's already done. Must be in RNAFold output format.");
            O_TO_s_Box_Text.setText("Secondary structure RNAFold output format");
            O_TO_s_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_TO_s_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_TO_s_Box_Text_FocusLost(evt);
                }
            });
            

            O_TO_v_Box.setText("v");
            O_TO_v_Box.setName("O_TO_v_Box"); // NOI18N
            O_TO_v_Box.getAccessibleContext().setAccessibleDescription("Dataset to validate, in tabbed format: name1 matureMiRNASequence1 precursorSequence1 SecondaryStructure1 . If secondary structures are not submitted, they will be calculated with RNAfold.");
            O_TO_v_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_TO_v_Box_ActionPerformed(evt);
                }
            });

            O_TO_v_Box_Text.setName("O_TO_v_Box_Text"); // NOI18N
            O_TO_v_Box_Text.getAccessibleContext().setAccessibleDescription("Dataset to validate, in tabbed format: name1 matureMiRNASequence1 precursorSequence1 SecondaryStructure1 . If secondary structures are not submitted, they will be calculated with RNAfold.");
            O_TO_v_Box_Text.setText("Dataset to validate");
            O_TO_v_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_TO_v_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_TO_v_Box_Text_FocusLost(evt);
                }
            });
            
        O_VO_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Validation_Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        O_VO_panel.setName("O_VO_panel"); // NOI18N
        

            O_VO_c_Box.setText("c");
            O_VO_c_Box.setName("O_VO_c_Box"); // NOI18N
            O_VO_c_Box.getAccessibleContext().setAccessibleDescription("If you already have trained a model with miRdup and want to validate a dataset, submit the model with this option.");
            O_VO_c_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_VO_c_Box_ActionPerformed(evt);
                }
            });

            O_VO_c_Box_Text.setName("O_VO_c_Box_Text"); // NOI18N
            O_VO_c_Box_Text.getAccessibleContext().setAccessibleDescription("If you already have trained a model with miRdup and want to validate a dataset, submit the model with this option.");
            O_VO_c_Box_Text.setText("model with miRdup");
            O_VO_c_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_VO_c_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_VO_c_Box_Text_FocusLost(evt);
                }
            });
            

            O_VO_p_Box.setText("p");
            O_VO_p_Box.setName("O_VO_p_Box"); // NOI18N
            O_VO_p_Box.getAccessibleContext().setAccessibleDescription("When you validate miRNAs on predicted pre-miRNAs, all unvalidated miRNAs will be recalculated to give you a new potential miRNA compatible with predicted pre-miRNAs.");
            O_VO_p_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_VO_p_Box_ActionPerformed(evt);
                }
            });

            O_VO_p_Box_Text.setName("O_VO_p_Box_Text"); // NOI18N
            O_VO_p_Box_Text.getAccessibleContext().setAccessibleDescription("When you validate miRNAs on predicted pre-miRNAs, all unvalidated miRNAs will be recalculated to give you a new potential miRNA compatible with predicted pre-miRNAs.");
            O_VO_p_Box_Text.setText("When you validate miRNAs on predicted pre-miRNAs");
            O_VO_p_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_VO_p_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_VO_p_Box_Text_FocusLost(evt);
                }
            });
            
        O_PO_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prediction_Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        O_PO_panel.setName("O_PO_panel"); // NOI18N
        

            O_PO_predict_Box.setText("predict");
            O_PO_predict_Box.setName("O_PO_predict_Box"); // NOI18N
            O_PO_predict_Box.getAccessibleContext().setAccessibleDescription("Enter in miRNA prediction mode");
            O_PO_predict_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_PO_predict_Box_ActionPerformed(evt);
                }
            });

            O_PO_predict_Box_Text.setName("O_PO_predict_Box_Text"); // NOI18N
            O_PO_predict_Box_Text.getAccessibleContext().setAccessibleDescription("Enter in miRNA prediction mode");
            O_PO_predict_Box_Text.setText("Enter in miRNA prediction mode");
            O_PO_predict_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_PO_predict_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_PO_predict_Box_Text_FocusLost(evt);
                }
            });
            

            O_PO_u_Box.setText("u");
            O_PO_u_Box.setName("O_PO_u_Box"); // NOI18N
            O_PO_u_Box.getAccessibleContext().setAccessibleDescription("Precursor sequence. Only works with prediction mode.");
            O_PO_u_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_PO_u_Box_ActionPerformed(evt);
                }
            });

            O_PO_u_Box_Text.setName("O_PO_u_Box_Text"); // NOI18N
            O_PO_u_Box_Text.getAccessibleContext().setAccessibleDescription("Precursor sequence. Only works with prediction mode.");
            O_PO_u_Box_Text.setText("Precursor sequence");
            O_PO_u_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_PO_u_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_PO_u_Box_Text_FocusLost(evt);
                }
            });
            

            O_PO_d_Box.setText("d");
            O_PO_d_Box.setName("O_PO_d_Box"); // NOI18N
            O_PO_d_Box.getAccessibleContext().setAccessibleDescription("Model. Only works with prediction mode.");
            O_PO_d_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_PO_d_Box_ActionPerformed(evt);
                }
            });

            O_PO_d_Box_Text.setName("O_PO_d_Box_Text"); // NOI18N
            O_PO_d_Box_Text.getAccessibleContext().setAccessibleDescription("Model. Only works with prediction mode.");
            O_PO_d_Box_Text.setText("Model");
            O_PO_d_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_PO_d_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_PO_d_Box_Text_FocusLost(evt);
                }
            });
            

            O_PO_f_Box.setText("f");
            O_PO_f_Box.setName("O_PO_f_Box"); // NOI18N
            O_PO_f_Box.getAccessibleContext().setAccessibleDescription("Outfile. Only works with prediction mode.");
            O_PO_f_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_PO_f_Box_ActionPerformed(evt);
                }
            });

            O_PO_f_Box_Text.setName("O_PO_f_Box_Text"); // NOI18N
            O_PO_f_Box_Text.getAccessibleContext().setAccessibleDescription("Outfile. Only works with prediction mode.");
            O_PO_f_Box_Text.setText("Outfile");
            O_PO_f_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_PO_f_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_PO_f_Box_Text_FocusLost(evt);
                }
            });
            

            O_PO_i_Box.setText("i");
            O_PO_i_Box.setName("O_PO_i_Box"); // NOI18N
            O_PO_i_Box.getAccessibleContext().setAccessibleDescription("infile of pre-miRNAs if you have more than one to give to miRdup. Only works with prediction mode.");
            O_PO_i_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_PO_i_Box_ActionPerformed(evt);
                }
            });

            O_PO_i_Box_Text.setName("O_PO_i_Box_Text"); // NOI18N
            O_PO_i_Box_Text.getAccessibleContext().setAccessibleDescription("infile of pre-miRNAs if you have more than one to give to miRdup. Only works with prediction mode.");
            O_PO_i_Box_Text.setText("infile of pre-miRNAs");
            O_PO_i_Box_Text.setPreferredSize(new java.awt.Dimension(220, 27));
            O_PO_i_Box_Text.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    O_PO_i_Box_Text_FocusLost(evt);
                }
            });
            
        O_C_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configuration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 1, 15))); // NOI18N
        O_C_panel.setName("O_C_panel"); // NOI18N
        

            O_C_r_Box.setText("r");
            O_C_r_Box.setName("O_C_r_Box"); // NOI18N
            O_C_r_Box.getAccessibleContext().setAccessibleDescription("Progs folder path of vienna package, usually ../ViennaRNA-2.0.5/Progs/    Must be set in linux and Mac. For windows, put executables in mirdup folder");
            O_C_r_Box.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_C_r_Box_ActionPerformed(evt);
                }
            });


            O_C_r_Box_Dir.setText("O_C_r_Box");
            O_C_r_Box_Dir.setName("O_C_r_Box_Dir"); // NOI18N
            O_C_r_Box_Dir.getAccessibleContext().setAccessibleDescription("Progs folder path of vienna package, usually ../ViennaRNA-2.0.5/Progs/    Must be set in linux and Mac. For windows, put executables in mirdup folder");
            O_C_r_Box_Dir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    O_C_r_Box_Dir_ActionPerformed(evt);
                }
            });


            O_C_r_Box_Label.setText("path of vienna package");
            O_C_r_Box_Label.setName("O_C_r_Box_Label"); // NOI18N
            O_C_r_Box_Label.getAccessibleContext().setAccessibleDescription("path of vienna package");
            O_C_r_Box_Label.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
            O_C_r_Box_DirFile.setName("O_C_r_Box_DirFile"); // NOI18N
            O_C_r_Box_DirFile.getAccessibleContext().setAccessibleDescription("Progs folder path of vienna package, usually ../ViennaRNA-2.0.5/Progs/    Must be set in linux and Mac. For windows, put executables in mirdup folder");
            O_C_r_Box_DirFile.setText("[path of vienna package]");
            O_C_r_Box_DirFile.setPreferredSize(new java.awt.Dimension(220, 27));
            

    javax.swing.GroupLayout O_tabpanelLayout = new javax.swing.GroupLayout(O_tabpanel);
    O_tabpanel.setLayout(O_tabpanelLayout);
    O_tabpanelLayout.setHorizontalGroup(
        O_tabpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_tabpanelLayout.createSequentialGroup()
            .addContainerGap() // truc
        )
    );
    O_tabpanelLayout.setVerticalGroup(
        O_tabpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_tabpanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );

    javax.swing.GroupLayout O_C_panelLayout = new javax.swing.GroupLayout(O_C_panel);
    O_C_panel.setLayout(O_C_panelLayout);
    O_C_panelLayout.setHorizontalGroup(
        O_C_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_C_panelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(O_C_r_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_DirFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap() // truc
        )
    );
    O_C_panelLayout.setVerticalGroup(
        O_C_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_C_panelLayout.createSequentialGroup()
            .addComponent(O_C_r_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_C_r_Box_DirFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );

    javax.swing.GroupLayout O_panelLayout = new javax.swing.GroupLayout(O_panel);
    O_panel.setLayout(O_panelLayout);
    O_panelLayout.setHorizontalGroup(
        O_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_panelLayout.createSequentialGroup()
            .addContainerGap()
             .addComponent(O_tabpanel)
            .addContainerGap() // truc
        )
    );
    O_panelLayout.setVerticalGroup(
        O_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_panelLayout.createSequentialGroup()
            .addContainerGap()
             .addComponent(O_tabpanel)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );

    javax.swing.GroupLayout O_PO_panelLayout = new javax.swing.GroupLayout(O_PO_panel);
    O_PO_panel.setLayout(O_PO_panelLayout);
    O_PO_panelLayout.setHorizontalGroup(
        O_PO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_PO_panelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(O_PO_predict_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_predict_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_PO_u_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_u_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_PO_d_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_d_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_PO_f_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_f_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_PO_i_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_i_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap() // truc
        )
    );
    O_PO_panelLayout.setVerticalGroup(
        O_PO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_PO_panelLayout.createSequentialGroup()
            .addComponent(O_PO_predict_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_predict_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_u_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_u_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_d_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_d_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_f_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_f_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_i_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_PO_i_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );

    javax.swing.GroupLayout O_TO_panelLayout = new javax.swing.GroupLayout(O_TO_panel);
    O_TO_panel.setLayout(O_TO_panelLayout);
    O_TO_panelLayout.setHorizontalGroup(
        O_TO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_TO_panelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(O_TO_k_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_DirFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_TO_m_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_m_Box_DirRep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_m_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_TO_h_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_h_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_TO_o_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_o_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_TO_s_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_s_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_TO_v_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_v_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap() // truc
        )
    );
    O_TO_panelLayout.setVerticalGroup(
        O_TO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_TO_panelLayout.createSequentialGroup()
            .addComponent(O_TO_k_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_DirFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_k_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_m_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_m_Box_Dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_m_Box_DirRep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_h_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_h_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_o_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_o_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_s_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_s_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_v_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_TO_v_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );

    javax.swing.GroupLayout O_VO_panelLayout = new javax.swing.GroupLayout(O_VO_panel);
    O_VO_panel.setLayout(O_VO_panelLayout);
    O_VO_panelLayout.setHorizontalGroup(
        O_VO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, O_VO_panelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(O_VO_c_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_VO_c_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap()
            .addComponent(O_VO_p_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_VO_p_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap() // truc
        )
    );
    O_VO_panelLayout.setVerticalGroup(
        O_VO_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(O_VO_panelLayout.createSequentialGroup()
            .addComponent(O_VO_c_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_VO_c_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_VO_p_Box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(O_VO_p_Box_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) // truc
        )
    );
    
    
        miRdupEditors.setPreferredSize(new java.awt.Dimension(459,380));
        miRdupEditors.addTab("miRdup Editor", general_jPanel1);
        miRdupEditors.getAccessibleContext().setAccessibleName("miRdup");
        miRdupEditors.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                miRdupEditorsComponentShown(evt);
            }
        });
    
    
        general_jPanel1.setPreferredSize(new java.awt.Dimension(459,380));
        general_jPanel1.setName("general_jPanel1");
    
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(how_jButton))
                    .addComponent(miRdupEditors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(how_jButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(miRdupEditors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    
       pack();
    
    }// </editor-fold>//GEN-END:initComponents
    
    private void miRdupEditorsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_miRdupEditorsComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_miRdupEditorsComponentShown
    
    private void how_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_how_jButton_ActionPerformed
        // TODO add your handling code here:
        HelpEditor help = new HelpEditor(this.frame, false, properties);
        help.setVisible(true);
    }//GEN-LAST:event_how_jButton_ActionPerformed
    
    private void close_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_jButton_ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_close_jButton_ActionPerformed
    
    private void run_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_run_jButton_ActionPerformed
        // TODO add your handling code here:
        if (this.properties.isSet("ClassName")) {
            this.parent_workflow.workflow.updateDependance();
            programs prog=new programs(parent_workflow.workbox.getCurrentWorkflows());
            prog.Run(properties);
        }
    }//GEN-LAST:event_run_jButton_ActionPerformed
    
    private void stop_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.put("Status", Config.status_nothing);
        properties.killThread();
    }//GEN-LAST:event_stop_jButton_ActionPerformed
    
    private void reset_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.load();             //--reload current properties from file
        this.setProperties(properties);//--Update current field
        this.display(properties);
    }//GEN-LAST:event_reset_jButton_ActionPerformed
    
    private void rename_jButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rename_jButton_ActionPerformed
        // TODO add your handling code here:
        properties.put("Name", this.name_jTextField.getText());
    }//GEN-LAST:event_rename_jButton_ActionPerformed
    
    private void name_jTextField_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_jTextField_ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_jTextField_ActionPerformed
    
    

    private void Default_Options_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Default_Options_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Default_Options_RButton,null);
    }//GEN-LAST:event_Default_Options_RButton_ActionPerformed

    private void Train_Valid_and_Pred_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Train_Valid_and_Pred_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Train_Valid_and_Pred_RButton,null);
    }//GEN-LAST:event_Train_Valid_and_Pred_RButton_ActionPerformed

    private void Training_Section_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Training_Section_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Training_Section_RButton,null);
    }//GEN-LAST:event_Training_Section_RButton_ActionPerformed

    private void Validation_Section_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Validation_Section_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Validation_Section_RButton,null);
    }//GEN-LAST:event_Validation_Section_RButton_ActionPerformed

    private void Prediction_Section_RButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prediction_Section_RButton_ActionPerformed
        // TODO add your handling code here:
        Util.buttonEventSpinner(properties,Prediction_Section_RButton,null);
    }//GEN-LAST:event_Prediction_Section_RButton_ActionPerformed

    private void O_TO_k_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_k_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_k_Box,O_TO_k_Box_DirFiles);
        if (properties.isSet(O_TO_k_Box.getName())) {
            O_TO_k_Box_Dir.setVisible(true);
        } else {
            O_TO_k_Box_Dir.setVisible(false);
        }
    }//GEN-LAST:event_O_TO_k_Box_ActionPerformed

    private void O_TO_k_Box_Dir_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_k_Box_Dir_ActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        if (this.O_TO_k_Box_DirFiles.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.O_TO_k_Box_DirFiles.getText());
        }
        d.setFileSelectionMode(JFileChooser.FILES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            O_TO_k_Box_DirFiles.setText(s);
            properties.remove(O_TO_k_Box_DirFiles.getName());
            Util.boxEventText(properties,O_TO_k_Box,O_TO_k_Box_DirFiles);
        }
    }//GEN-LAST:event_O_TO_k_Box_Dir_ActionPerformed

    private void O_TO_m_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_m_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_m_Box,O_TO_m_Box_DirRep);
        if (properties.isSet(O_TO_m_Box.getName())) {
            O_TO_m_Box_Dir.setVisible(true);
        } else {
            O_TO_m_Box_Dir.setVisible(false);
        }
    }//GEN-LAST:event_O_TO_m_Box_ActionPerformed

    private void O_TO_m_Box_Dir_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_m_Box_Dir_ActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        if (this.O_TO_m_Box_DirRep.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.O_TO_m_Box_DirRep.getText());
        }
        d.setFileSelectionMode(JFileChooser.FILES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            O_TO_m_Box_DirRep.setText(s);
            properties.remove(O_TO_m_Box_DirRep.getName());
            Util.boxEventText(properties,O_TO_m_Box,O_TO_m_Box_DirRep);
        }
    }//GEN-LAST:event_O_TO_m_Box_Dir_ActionPerformed

    private void O_TO_h_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_h_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_h_Box,O_TO_h_Box_Text);
    }//GEN-LAST:event_O_TO_h_Box_ActionPerformed

    private void O_TO_h_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_TO_h_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_h_Box,O_TO_h_Box_Text);
    }//GEN-LAST:event_O_TO_h_Box_Text_FocusLost

    private void O_TO_o_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_o_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_o_Box,O_TO_o_Box_Text);
    }//GEN-LAST:event_O_TO_o_Box_ActionPerformed

    private void O_TO_o_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_TO_o_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_o_Box,O_TO_o_Box_Text);
    }//GEN-LAST:event_O_TO_o_Box_Text_FocusLost

    private void O_TO_s_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_s_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_s_Box,O_TO_s_Box_Text);
    }//GEN-LAST:event_O_TO_s_Box_ActionPerformed

    private void O_TO_s_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_TO_s_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_s_Box,O_TO_s_Box_Text);
    }//GEN-LAST:event_O_TO_s_Box_Text_FocusLost

    private void O_TO_v_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_TO_v_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_v_Box,O_TO_v_Box_Text);
    }//GEN-LAST:event_O_TO_v_Box_ActionPerformed

    private void O_TO_v_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_TO_v_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_TO_v_Box,O_TO_v_Box_Text);
    }//GEN-LAST:event_O_TO_v_Box_Text_FocusLost

    private void O_VO_c_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_VO_c_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_VO_c_Box,O_VO_c_Box_Text);
    }//GEN-LAST:event_O_VO_c_Box_ActionPerformed

    private void O_VO_c_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_VO_c_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_VO_c_Box,O_VO_c_Box_Text);
    }//GEN-LAST:event_O_VO_c_Box_Text_FocusLost

    private void O_VO_p_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_VO_p_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_VO_p_Box,O_VO_p_Box_Text);
    }//GEN-LAST:event_O_VO_p_Box_ActionPerformed

    private void O_VO_p_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_VO_p_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_VO_p_Box,O_VO_p_Box_Text);
    }//GEN-LAST:event_O_VO_p_Box_Text_FocusLost

    private void O_PO_predict_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_PO_predict_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_predict_Box,O_PO_predict_Box_Text);
        if (properties.isSet(O_PO_predict_Box.getName())) {
            O_PO_u_Box.setEnabled(true);
            O_PO_d_Box.setEnabled(true);
            O_PO_f_Box.setEnabled(true);
            O_PO_i_Box.setEnabled(true);
        } else {
            O_PO_u_Box.setEnabled(false);
            O_PO_u_Box_Text.setEnabled(false);
            O_PO_d_Box.setEnabled(false);
            O_PO_d_Box_Text.setEnabled(false);
            O_PO_f_Box.setEnabled(false);
            O_PO_f_Box_Text.setEnabled(false);
            O_PO_i_Box.setEnabled(false);
            O_PO_i_Box_Text.setEnabled(false);
        }
    }//GEN-LAST:event_O_PO_predict_Box_ActionPerformed

    private void O_PO_predict_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_PO_predict_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_predict_Box,O_PO_predict_Box_Text);
    }//GEN-LAST:event_O_PO_predict_Box_Text_FocusLost

    private void O_PO_u_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_PO_u_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_u_Box,O_PO_u_Box_Text);
    }//GEN-LAST:event_O_PO_u_Box_ActionPerformed

    private void O_PO_u_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_PO_u_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_u_Box,O_PO_u_Box_Text);
    }//GEN-LAST:event_O_PO_u_Box_Text_FocusLost

    private void O_PO_d_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_PO_d_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_d_Box,O_PO_d_Box_Text);
    }//GEN-LAST:event_O_PO_d_Box_ActionPerformed

    private void O_PO_d_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_PO_d_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_d_Box,O_PO_d_Box_Text);
    }//GEN-LAST:event_O_PO_d_Box_Text_FocusLost

    private void O_PO_f_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_PO_f_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_f_Box,O_PO_f_Box_Text);
    }//GEN-LAST:event_O_PO_f_Box_ActionPerformed

    private void O_PO_f_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_PO_f_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_f_Box,O_PO_f_Box_Text);
    }//GEN-LAST:event_O_PO_f_Box_Text_FocusLost

    private void O_PO_i_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_PO_i_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_i_Box,O_PO_i_Box_Text);
    }//GEN-LAST:event_O_PO_i_Box_ActionPerformed

    private void O_PO_i_Box_Text_FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_O_PO_i_Box_Text_FocusLost
        // TODO add your handling code here:
        Util.boxEventText(properties,O_PO_i_Box,O_PO_i_Box_Text);
    }//GEN-LAST:event_O_PO_i_Box_Text_FocusLost

    private void O_C_r_Box_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_C_r_Box_ActionPerformed
        // TODO add your handling code here:
        Util.boxEventText(properties,O_C_r_Box,O_C_r_Box_DirFile);
        if (properties.isSet(O_C_r_Box.getName())) {
            O_C_r_Box_Dir.setVisible(true);
        } else {
            O_C_r_Box_Dir.setVisible(false);
        }
    }//GEN-LAST:event_O_C_r_Box_ActionPerformed

    private void O_C_r_Box_Dir_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_O_C_r_Box_Dir_ActionPerformed
        // TODO add your handling code here:
        JFileChooser d;
        if (this.O_C_r_Box_DirFile.getText().isEmpty()) {
            d=new JFileChooser(config.getExplorerPath());
        } else {
            d=new JFileChooser(this.O_C_r_Box_DirFile.getText());
        }
        d.setFileSelectionMode(JFileChooser.FILES_ONLY);
        d.setAcceptAllFileFilterUsed(false);
        d.setMultiSelectionEnabled(false);
        int result = d.showOpenDialog(this);
        
        if (result==JFileChooser.APPROVE_OPTION) {
            File dir = d.getSelectedFile();
            
            // Set the text
            String s = dir.getAbsolutePath();
            O_C_r_Box_DirFile.setText(s);
            properties.remove(O_C_r_Box_DirFile.getName());
            Util.boxEventText(properties,O_C_r_Box,O_C_r_Box_DirFile);
        }
    }//GEN-LAST:event_O_C_r_Box_Dir_ActionPerformed
    /*******************************************************************
    * Enabled Function
    *******************************************************************/
    
    private void enabledFunctionForTraining_Options (boolean e) {
        this.O_TO_k_Box.setEnabled(e);
        if (properties.isSet(O_TO_k_Box.getName()) && e==true) {
            this.O_TO_k_Box_DirFiles.setEnabled(true);
            this.O_TO_k_Box_Dir.setEnabled(true);
        } else {
            this.O_TO_k_Box_DirFiles.setEnabled(false);
            this.O_TO_k_Box_Dir.setEnabled(false);
        }

        this.O_TO_m_Box.setEnabled(e);
        if (properties.isSet(O_TO_m_Box.getName()) && e==true) {
            this.O_TO_m_Box_DirRep.setEnabled(true);
            this.O_TO_m_Box_Dir.setEnabled(true);
        } else {
            this.O_TO_m_Box_DirRep.setEnabled(false);
            this.O_TO_m_Box_Dir.setEnabled(false);
        }

        this.O_TO_h_Box.setEnabled(e);
        if (properties.isSet(O_TO_h_Box.getName()) && e==true) {
            this.O_TO_h_Box_Text.setEnabled(true);
        } else {
            this.O_TO_h_Box_Text.setEnabled(false);
        }

        this.O_TO_o_Box.setEnabled(e);
        if (properties.isSet(O_TO_o_Box.getName()) && e==true) {
            this.O_TO_o_Box_Text.setEnabled(true);
        } else {
            this.O_TO_o_Box_Text.setEnabled(false);
        }

        this.O_TO_s_Box.setEnabled(e);
        if (properties.isSet(O_TO_s_Box.getName()) && e==true) {
            this.O_TO_s_Box_Text.setEnabled(true);
        } else {
            this.O_TO_s_Box_Text.setEnabled(false);
        }

        this.O_TO_v_Box.setEnabled(e);
        if (properties.isSet(O_TO_v_Box.getName()) && e==true) {
            this.O_TO_v_Box_Text.setEnabled(true);
        } else {
            this.O_TO_v_Box_Text.setEnabled(false);
        }

    }
    
    private void enabledFunctionForValidation_Options (boolean e) {
        this.O_VO_c_Box.setEnabled(e);
        if (properties.isSet(O_VO_c_Box.getName()) && e==true) {
            this.O_VO_c_Box_Text.setEnabled(true);
        } else {
            this.O_VO_c_Box_Text.setEnabled(false);
        }

        this.O_VO_p_Box.setEnabled(e);
        if (properties.isSet(O_VO_p_Box.getName()) && e==true) {
            this.O_VO_p_Box_Text.setEnabled(true);
        } else {
            this.O_VO_p_Box_Text.setEnabled(false);
        }

    }
    
    private void enabledFunctionForPrediction_Options (boolean e) {
        this.O_PO_predict_Box.setEnabled(e);
        if (properties.isSet(O_PO_predict_Box.getName()) && e==true) {
            this.O_PO_predict_Box_Text.setEnabled(true);
        } else {
            this.O_PO_predict_Box_Text.setEnabled(false);
        }

        this.O_PO_u_Box.setEnabled(e);
        if (properties.isSet(O_PO_u_Box.getName()) && e==true) {
            this.O_PO_u_Box_Text.setEnabled(true);
        } else {
            this.O_PO_u_Box_Text.setEnabled(false);
        }

        this.O_PO_d_Box.setEnabled(e);
        if (properties.isSet(O_PO_d_Box.getName()) && e==true) {
            this.O_PO_d_Box_Text.setEnabled(true);
        } else {
            this.O_PO_d_Box_Text.setEnabled(false);
        }

        this.O_PO_f_Box.setEnabled(e);
        if (properties.isSet(O_PO_f_Box.getName()) && e==true) {
            this.O_PO_f_Box_Text.setEnabled(true);
        } else {
            this.O_PO_f_Box_Text.setEnabled(false);
        }

        this.O_PO_i_Box.setEnabled(e);
        if (properties.isSet(O_PO_i_Box.getName()) && e==true) {
            this.O_PO_i_Box_Text.setEnabled(true);
        } else {
            this.O_PO_i_Box_Text.setEnabled(false);
        }

    }
    
    private void enabledFunctionForConfiguration (boolean e) {
        this.O_C_r_Box.setEnabled(e);
        if (properties.isSet(O_C_r_Box.getName()) && e==true) {
            this.O_C_r_Box_DirFile.setEnabled(true);
            this.O_C_r_Box_Dir.setEnabled(true);
        } else {
            this.O_C_r_Box_DirFile.setEnabled(false);
            this.O_C_r_Box_Dir.setEnabled(false);
        }

    }
    

    /*******************************************************************
    * Update Saved Properties => usp_functions
    *******************************************************************/
    
    private void updateSavedProperties(workflow_properties properties) {
        usp_valueANDtext (properties);
        usp_boxANDbutton (properties);
    }
    
    private void usp_valueANDtext (workflow_properties properties) {
        if (this.properties.isSet(O_TO_k_Box_DirFiles.getName())){
            this.O_TO_k_Box_DirFiles.setText(this.properties.get(O_TO_k_Box_DirFiles.getName()));
            this.O_TO_k_Box_DirFiles.setEnabled(false);
            this.O_TO_k_Box_Dir.setVisible(false);
        }
        if (this.properties.isSet(O_TO_m_Box_DirRep.getName())){
            this.O_TO_m_Box_DirRep.setText(this.properties.get(O_TO_m_Box_DirRep.getName()));
            this.O_TO_m_Box_DirRep.setEnabled(false);
            this.O_TO_m_Box_Dir.setVisible(false);
        }
        if (this.properties.isSet(O_TO_h_Box_Text.getName())){
            this.O_TO_h_Box_Text.setText(this.properties.get(O_TO_h_Box_Text.getName()));
            this.O_TO_h_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_TO_o_Box_Text.getName())){
            this.O_TO_o_Box_Text.setText(this.properties.get(O_TO_o_Box_Text.getName()));
            this.O_TO_o_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_TO_s_Box_Text.getName())){
            this.O_TO_s_Box_Text.setText(this.properties.get(O_TO_s_Box_Text.getName()));
            this.O_TO_s_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_TO_v_Box_Text.getName())){
            this.O_TO_v_Box_Text.setText(this.properties.get(O_TO_v_Box_Text.getName()));
            this.O_TO_v_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_VO_c_Box_Text.getName())){
            this.O_VO_c_Box_Text.setText(this.properties.get(O_VO_c_Box_Text.getName()));
            this.O_VO_c_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_VO_p_Box_Text.getName())){
            this.O_VO_p_Box_Text.setText(this.properties.get(O_VO_p_Box_Text.getName()));
            this.O_VO_p_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_predict_Box_Text.getName())){
            this.O_PO_predict_Box_Text.setText(this.properties.get(O_PO_predict_Box_Text.getName()));
            this.O_PO_predict_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_u_Box_Text.getName())){
            this.O_PO_u_Box_Text.setText(this.properties.get(O_PO_u_Box_Text.getName()));
            this.O_PO_u_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_d_Box_Text.getName())){
            this.O_PO_d_Box_Text.setText(this.properties.get(O_PO_d_Box_Text.getName()));
            this.O_PO_d_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_f_Box_Text.getName())){
            this.O_PO_f_Box_Text.setText(this.properties.get(O_PO_f_Box_Text.getName()));
            this.O_PO_f_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_i_Box_Text.getName())){
            this.O_PO_i_Box_Text.setText(this.properties.get(O_PO_i_Box_Text.getName()));
            this.O_PO_i_Box_Text.setEnabled(false);
        }
        if (this.properties.isSet(O_C_r_Box_DirFile.getName())){
            this.O_C_r_Box_DirFile.setText(this.properties.get(O_C_r_Box_DirFile.getName()));
            this.O_C_r_Box_DirFile.setEnabled(false);
            this.O_C_r_Box_Dir.setVisible(false);
        }
    }
    
    private void usp_boxANDbutton (workflow_properties properties) {
        if (this.properties.isSet(O_TO_k_Box.getName())){
            this.O_TO_k_Box.setSelected(true);
            this.O_TO_k_Box_DirFiles.setEnabled(true);
            this.O_TO_k_Box_Dir.setVisible(true);
        }
        if (this.properties.isSet(O_TO_m_Box.getName())){
            this.O_TO_m_Box.setSelected(true);
            this.O_TO_m_Box_DirRep.setEnabled(true);
            this.O_TO_m_Box_Dir.setVisible(true);
        }
        if (this.properties.isSet(O_TO_h_Box.getName())){
            this.O_TO_h_Box.setSelected(true);
            this.O_TO_h_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_TO_o_Box.getName())){
            this.O_TO_o_Box.setSelected(true);
            this.O_TO_o_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_TO_s_Box.getName())){
            this.O_TO_s_Box.setSelected(true);
            this.O_TO_s_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_TO_v_Box.getName())){
            this.O_TO_v_Box.setSelected(true);
            this.O_TO_v_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_VO_c_Box.getName())){
            this.O_VO_c_Box.setSelected(true);
            this.O_VO_c_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_VO_p_Box.getName())){
            this.O_VO_p_Box.setSelected(true);
            this.O_VO_p_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_PO_predict_Box.getName())){
            this.O_PO_predict_Box.setSelected(true);
            this.O_PO_predict_Box_Text.setEnabled(true);
            this.O_PO_u_Box.setEnabled(true);
            this.O_PO_d_Box.setEnabled(true);
            this.O_PO_f_Box.setEnabled(true);
            this.O_PO_i_Box.setEnabled(true);
        } else {
            this.O_PO_u_Box.setEnabled(false);
            this.O_PO_d_Box.setEnabled(false);
            this.O_PO_f_Box.setEnabled(false);
            this.O_PO_i_Box.setEnabled(false);
        }
        if (this.properties.isSet(O_PO_u_Box.getName())){
            this.O_PO_u_Box.setSelected(true);
            this.O_PO_u_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_PO_d_Box.getName())){
            this.O_PO_d_Box.setSelected(true);
            this.O_PO_d_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_PO_f_Box.getName())){
            this.O_PO_f_Box.setSelected(true);
            this.O_PO_f_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_PO_i_Box.getName())){
            this.O_PO_i_Box.setSelected(true);
            this.O_PO_i_Box_Text.setEnabled(true);
        }
        if (this.properties.isSet(O_C_r_Box.getName())){
            this.O_C_r_Box.setSelected(true);
            this.O_C_r_Box_DirFile.setEnabled(true);
            this.O_C_r_Box_Dir.setVisible(true);
        }
    }
    

    /*******************************************************************
     * Set the configuration properties for this object
     ******************************************************************/
    
    @Override
    public void display(workflow_properties properties) {
        this.properties=properties;
        initComponents();
        setIconImage(Config.image);
        // Set position
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension d = getSize();
        setLocation((screenSize.width-d.width)/2,
                (screenSize.height-d.height)/2);
        
        // Set the program properties
        this.setProperties(properties);
        
        // Update Saved Properties => usp
        this.updateSavedProperties(properties);
        
        this.setAlwaysOnTop(true);
        this.setVisible(true);
    }
    
    /*******************************************************************
     * Sets for Properties
     ******************************************************************/
    
    /**
     * Set Properties
     * @param properties
     */
    
    public void setProperties(workflow_properties properties) {
        this.properties=properties;
        setTitle(properties.getName());
        //if (this.properties.isSet("Description")) this.Notice.setText(properties.get("Description"));
        
        // Properties Default Options
        this.defaultPgrmValues(properties);
        // Set the menu
        this.menuFields(properties);
    }
    
    public void setProperties(String filename, String path) {
        workflow_properties tmp=new workflow_properties();
        tmp.load(filename, path);
        this.properties=tmp;
        setTitle(properties.getName());
    }
    
    /*******************************************************************
     * Set With default program values present in properties file
     ******************************************************************/
    private void defaultPgrmValues(workflow_properties properties) {
        boolean b = true;
        if (!(properties.isSet(Default_Options_RButton.getName()))
        && !(properties.isSet(Train_Valid_and_Pred_RButton.getName()))
        && !(properties.isSet(Training_Section_RButton.getName()))
        && !(properties.isSet(Validation_Section_RButton.getName()))
        && !(properties.isSet(Prediction_Section_RButton.getName()))
        ) {
            b = false;
        }
        
        Util.getDefaultPgrmValues(properties,b);
    }
    
    /*******************************************************************
     * Set Menu fields
     ******************************************************************/
    
    private void menuFields(workflow_properties properties) {
        if (properties.isSet(Default_Options_RButton.getName())) {
            Default_Options_RButton.setEnabled(true);
            enabledFunctionForTraining_Options (false);
            enabledFunctionForValidation_Options (false);
            enabledFunctionForPrediction_Options (false);
            enabledFunctionForConfiguration (false);
        }
        else if (properties.isSet(Default_Options_RButton.getName())) {
            Default_Options_RButton.setEnabled(true);
            enabledFunctionForConfiguration (true);
        }
        else if (properties.isSet(Validation_Section_RButton.getName())) {
            Validation_Section_RButton.setEnabled(true);
            enabledFunctionForValidation_Options (true);
        }
        else if (properties.isSet(Training_Section_RButton.getName())) {
            Training_Section_RButton.setEnabled(true);
            enabledFunctionForTraining_Options (true);
        }
        else if (properties.isSet(Prediction_Section_RButton.getName())) {
            Prediction_Section_RButton.setEnabled(true);
            enabledFunctionForPrediction_Options (true);
        }
    }

    /*******************************************************************
     * Save Image
     ******************************************************************/
    
    public void saveImage(String filename) {
        BufferedImage bi;
        try {
            bi = new Robot().createScreenCapture(this.getBounds());
            ImageIO.write(bi, "png", new File(filename));
            this.setVisible(false);
        } catch (Exception ex) {
            Config.log("Unable to save "+filename+" dialog image");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton how_jButton;           //Basic Panel
    private javax.swing.JTabbedPane miRdupEditors; //Basic Panel
    private javax.swing.JPanel general_jPanel1;         //Basic Panel
    private javax.swing.JButton rename_jButton;        //Basic Panel
    private javax.swing.JTextField name_jTextField;    //Basic Panel
    private javax.swing.JLabel name_jLabel;            //Basic Panel
    private javax.swing.JButton reset_jButton;         //Basic Panel
    private javax.swing.JButton stop_jButton;          //Basic Panel
    private javax.swing.JButton run_jButton;            //Basic Panel
    private javax.swing.JButton close_jButton;          //Basic Panel
    private javax.swing.JRadioButton Default_Options_RButton;
    private javax.swing.JRadioButton Train_Valid_and_Pred_RButton;
    private javax.swing.JRadioButton Training_Section_RButton;
    private javax.swing.JRadioButton Validation_Section_RButton;
    private javax.swing.JRadioButton Prediction_Section_RButton;
    private javax.swing.JCheckBox O_TO_k_Box;
    private javax.swing.JLabel O_TO_k_Box_Label;
    private javax.swing.JTextField O_TO_k_Box_DirFiles;
    private javax.swing.JButton O_TO_k_Box_Dir;
    private javax.swing.JCheckBox O_TO_m_Box;
    private javax.swing.JTextField O_TO_m_Box_DirRep;
    private javax.swing.JButton O_TO_m_Box_Dir;
    private javax.swing.JCheckBox O_TO_h_Box;
    private javax.swing.JTextField O_TO_h_Box_Text;
    private javax.swing.JCheckBox O_TO_o_Box;
    private javax.swing.JTextField O_TO_o_Box_Text;
    private javax.swing.JCheckBox O_TO_s_Box;
    private javax.swing.JTextField O_TO_s_Box_Text;
    private javax.swing.JCheckBox O_TO_v_Box;
    private javax.swing.JTextField O_TO_v_Box_Text;
    private javax.swing.JCheckBox O_VO_c_Box;
    private javax.swing.JTextField O_VO_c_Box_Text;
    private javax.swing.JCheckBox O_VO_p_Box;
    private javax.swing.JTextField O_VO_p_Box_Text;
    private javax.swing.JCheckBox O_PO_predict_Box;
    private javax.swing.JTextField O_PO_predict_Box_Text;
    private javax.swing.JCheckBox O_PO_u_Box;
    private javax.swing.JTextField O_PO_u_Box_Text;
    private javax.swing.JCheckBox O_PO_d_Box;
    private javax.swing.JTextField O_PO_d_Box_Text;
    private javax.swing.JCheckBox O_PO_f_Box;
    private javax.swing.JTextField O_PO_f_Box_Text;
    private javax.swing.JCheckBox O_PO_i_Box;
    private javax.swing.JTextField O_PO_i_Box_Text;
    private javax.swing.JCheckBox O_C_r_Box;
    private javax.swing.JTextField O_C_r_Box_DirFile;
    private javax.swing.JLabel O_C_r_Box_Label;
    private javax.swing.JButton O_C_r_Box_Dir;
    private javax.swing.JTabbedPane O_tabpanel;
    private javax.swing.JPanel O_C_panel;
    private javax.swing.JPanel O_panel;
    private javax.swing.JPanel O_PO_panel;
    private javax.swing.JPanel O_TO_panel;
    private javax.swing.JPanel O_VO_panel;
    // End of variables declaration//GEN-END:variables
    }

